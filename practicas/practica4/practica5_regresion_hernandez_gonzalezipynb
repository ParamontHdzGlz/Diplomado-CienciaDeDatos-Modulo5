{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "durable-surname",
   "metadata": {},
   "source": [
    "# Regresion"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c319fa86",
   "metadata": {},
   "source": [
    "## Preparación de ambiente"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ea86e78e",
   "metadata": {},
   "source": [
    "### Carga de librerías"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "e737196e",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-05-29T00:39:38.234781Z",
     "start_time": "2021-05-29T00:39:35.644286Z"
    },
    "execution": {
     "iopub.execute_input": "2021-10-16T13:21:11.582701Z",
     "iopub.status.busy": "2021-10-16T13:21:11.582385Z",
     "iopub.status.idle": "2021-10-16T13:21:15.916429Z",
     "shell.execute_reply": "2021-10-16T13:21:15.915372Z",
     "shell.execute_reply.started": "2021-10-16T13:21:11.582669Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "        <script type=\"text/javascript\">\n",
       "        window.PlotlyConfig = {MathJaxConfig: 'local'};\n",
       "        if (window.MathJax) {MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}\n",
       "        if (typeof require !== 'undefined') {\n",
       "        require.undef(\"plotly\");\n",
       "        requirejs.config({\n",
       "            paths: {\n",
       "                'plotly': ['https://cdn.plot.ly/plotly-latest.min']\n",
       "            }\n",
       "        });\n",
       "        require(['plotly'], function(Plotly) {\n",
       "            window._Plotly = Plotly;\n",
       "        });\n",
       "        }\n",
       "        </script>\n",
       "        "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Data Wrangling\n",
    "import os\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "from datetime import date, datetime\n",
    "#from pandarallel import pandarallel\n",
    "from dateutil.relativedelta import relativedelta as rd\n",
    "from funpymodeling.exploratory import status\n",
    "\n",
    "# Preprocesamiento\n",
    "from sklearn.pipeline import Pipeline\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "from sklearn.preprocessing import MinMaxScaler, LabelEncoder\n",
    "\n",
    "# Modelado\n",
    "import keras\n",
    "import sklearn\n",
    "from keras import metrics, Input\n",
    "from keras.models import Sequential, Model\n",
    "from sklearn.linear_model import LinearRegression\n",
    "from sklearn.neighbors import KNeighborsRegressor\n",
    "from sklearn.tree import DecisionTreeRegressor\n",
    "from sklearn.ensemble import RandomForestRegressor\n",
    "from sklearn.linear_model import Lasso\n",
    "from sklearn.linear_model import Ridge\n",
    "from sklearn.linear_model import ElasticNet\n",
    "from sklearn.ensemble import AdaBoostRegressor\n",
    "from sklearn.neural_network import MLPRegressor\n",
    "\n",
    "from sklearn.metrics import mean_absolute_error\n",
    "from sklearn.metrics import mean_squared_error\n",
    "from sklearn.metrics import r2_score\n",
    "from sklearn.metrics import mean_absolute_percentage_error\n",
    "\n",
    "from sklearn.feature_selection import VarianceThreshold\n",
    "from keras.layers import Embedding, Dense, Flatten, Dropout\n",
    "from sklearn.model_selection import cross_val_score, RandomizedSearchCV, train_test_split\n",
    "\n",
    "# Visualización\n",
    "import cufflinks as cf\n",
    "from sklearn import set_config\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Configuración de ambiente\n",
    "cf.go_offline()\n",
    "set_config(display='diagram')\n",
    "pd.set_option('display.max_columns', 50)\n",
    "#pandarallel.initialize(progress_bar=True)\n",
    "pd.set_option('display.float_format', lambda x: '%.4f' % x)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d63e8357",
   "metadata": {},
   "source": [
    "### Funciones relevantes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "69386563-dd96-46f5-bb70-ee02e2a11ac7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-10-16T13:55:15.049154Z",
     "iopub.status.busy": "2021-10-16T13:55:15.048787Z",
     "iopub.status.idle": "2021-10-16T13:55:15.059161Z",
     "shell.execute_reply": "2021-10-16T13:55:15.058105Z",
     "shell.execute_reply.started": "2021-10-16T13:55:15.049115Z"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def semiverseno(lat1, lon1, lat2, lon2):\n",
    "    \"\"\"\n",
    "    This uses the ‘haversine’ formula to calculate the great-circle distance between two points – that is, \n",
    "    the shortest distance over the earth’s surface – giving an ‘as-the-crow-flies’ distance between the points \n",
    "    (ignoring any hills they fly over, of course!).\n",
    "    Haversine\n",
    "    formula:    a = sin²(Δφ/2) + cos φ1 ⋅ cos φ2 ⋅ sin²(Δλ/2)\n",
    "    c = 2 ⋅ atan2( √a, √(1−a) )\n",
    "    d = R ⋅ c\n",
    "    where   φ is latitude, λ is longitude, R is earth’s radius (mean radius = 6,371km);\n",
    "    note that angles need to be in radians to pass to trig functions!\n",
    "    \"\"\"\n",
    "    try:\n",
    "        R = 6371.0088 # Radio de la tierra\n",
    "        lat1, lon1, lat2, lon2 = map(np.radians, [lat1, lon1, lat2, lon2])\n",
    "\n",
    "        dlat = lat2 - lat1\n",
    "        dlon = lon2 - lon1\n",
    "        a = np.sin(dlat/2)**2 + np.cos(lat1) * np.cos(lat2) * np.sin(dlon/2) **2\n",
    "        c = 2 * np.arctan2(a**0.5, (1-a)**0.5)\n",
    "        d = R * c\n",
    "        return float(round(d,4))\n",
    "    except:\n",
    "        return 0.0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "68064040",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-05-29T01:30:44.873859Z",
     "start_time": "2021-05-29T01:30:44.863987Z"
    },
    "execution": {
     "iopub.execute_input": "2021-10-16T13:39:18.897273Z",
     "iopub.status.busy": "2021-10-16T13:39:18.896952Z",
     "iopub.status.idle": "2021-10-16T13:39:18.911540Z",
     "shell.execute_reply": "2021-10-16T13:39:18.910691Z",
     "shell.execute_reply.started": "2021-10-16T13:39:18.897239Z"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def make_embedding(X, X_v, feature, target, embedding_size=3):\n",
    "    print(f\"Creating embedding for {feature}\\n\")\n",
    "    le = LabelEncoder()\n",
    "    X_feat = le.fit_transform(X[feature])\n",
    "    model = Sequential()\n",
    "    model.add(Embedding(input_dim = len(le.classes_), output_dim = embedding_size, input_length = 1, name=\"embedding\"))\n",
    "    model.add(Flatten())\n",
    "    model.add(Dense(20, activation=\"relu\"))\n",
    "    model.add(Dense(10, activation=\"tanh\"))\n",
    "    model.add(Dense(1, activation=\"softmax\"))\n",
    "    kmetrics = [\n",
    "        metrics.Accuracy(name=\"accuracy\"),\n",
    "        metrics.AUC(name=\"roc\")\n",
    "    ]   \n",
    "    model.compile(loss = \"binary_crossentropy\", optimizer = \"adam\", metrics=[kmetrics])\n",
    "    model.fit(x = X_feat, y=X[target].to_numpy() , epochs = 25, batch_size = 6000)\n",
    "    layer = model.get_layer('embedding')\n",
    "    output_embeddings = layer.get_weights()\n",
    "    X_emb = pd.DataFrame(output_embeddings[0], columns=[f\"{feature}_embedding_{x}\" for x in range(embedding_size)])\n",
    "    X_emb.reset_index(drop=False, inplace=True)\n",
    "    X_emb[feature] = X_emb[\"index\"].map(lambda x: le.inverse_transform([x])[0])\n",
    "    X = X.merge(X_emb, on = feature, how=\"inner\").drop(columns=[feature, \"index\"])\n",
    "    X_v = X_v.merge(X_emb, on = feature, how=\"left\").drop(columns=[feature, \"index\"])\n",
    "    return X, X_v, X_emb"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "d798524a",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-05-29T01:25:18.646164Z",
     "start_time": "2021-05-29T01:25:18.639896Z"
    },
    "execution": {
     "iopub.execute_input": "2021-10-16T13:43:55.193340Z",
     "iopub.status.busy": "2021-10-16T13:43:55.192881Z",
     "iopub.status.idle": "2021-10-16T13:43:55.206502Z",
     "shell.execute_reply": "2021-10-16T13:43:55.205238Z",
     "shell.execute_reply.started": "2021-10-16T13:43:55.193287Z"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def make_autoencoder(X_train, encoding_dim=16, batch_size=500, epochs=20):\n",
    "    kmetrics = [\n",
    "        metrics.RootMeanSquaredError(name='rms'),\n",
    "        metrics.MeanAbsoluteError(name='mae')\n",
    "    ]   \n",
    "    len_input_output = X_train.shape[-1]\n",
    "    input_ = Input(shape=(len_input_output,))\n",
    "    encoded = Dense(units=encoding_dim*2, activation=\"relu\")(input_)\n",
    "    bottleneck = Dense(units=encoding_dim, \n",
    "                       activation=\"relu\")(encoded)\n",
    "    decoded = Dense(units=encoding_dim*2, \n",
    "                    activation=\"relu\")(bottleneck)\n",
    "    output = Dense(units=len_input_output, \n",
    "                    activation=\"linear\")(decoded)\n",
    "    autoencoder = Model(inputs=input_, outputs=output)\n",
    "    autoencoder.compile(optimizer='adam', loss='mean_squared_error',\n",
    "                        metrics=[kmetrics])\n",
    "    autoencoder.fit(X_train, X_train,\n",
    "                    batch_size=batch_size,\n",
    "                    epochs=epochs)\n",
    "    encoder = Model(inputs=input_, outputs=bottleneck)\n",
    "    return autoencoder, encoder"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "90d7752e-f5df-4b5b-9483-dfbda2320cd1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-10-16T13:43:55.655969Z",
     "iopub.status.busy": "2021-10-16T13:43:55.655453Z",
     "iopub.status.idle": "2021-10-16T13:43:55.906162Z",
     "shell.execute_reply": "2021-10-16T13:43:55.904875Z",
     "shell.execute_reply.started": "2021-10-16T13:43:55.655909Z"
    }
   },
   "outputs": [],
   "source": [
    "def regression_metrics(X,y,pipe,model):\n",
    "    pipe = Pipeline(pipe.steps + [(\"model\", model)])\n",
    "    ls_scores_r2 = cross_val_score(estimator=pipe, X=X, y=y, scoring=\"r2\", n_jobs=-1, cv=4)\n",
    "    print(f\"R2 media: {np.mean(ls_scores_r2):,.2f}, desviación estándar: {np.std(ls_scores_r2):,.2f}\")\n",
    "    return np.mean(ls_scores_r2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "c2d2b456-a895-418c-aa03-63d1aa07e1e7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-10-16T13:43:55.996343Z",
     "iopub.status.busy": "2021-10-16T13:43:55.995779Z",
     "iopub.status.idle": "2021-10-16T13:43:56.034597Z",
     "shell.execute_reply": "2021-10-16T13:43:56.032870Z",
     "shell.execute_reply.started": "2021-10-16T13:43:55.996277Z"
    }
   },
   "outputs": [],
   "source": [
    "def hyperparam_logistic(X, y, pipe, model, param_grid):\n",
    "    pipe = Pipeline(pipe.steps + [(\"model\", model)])\n",
    "    hp = RandomizedSearchCV(cv=4, \n",
    "                            param_distributions=param_grid,\n",
    "                            n_iter=5,\n",
    "                            scoring=\"r2\", \n",
    "                            verbose=10,\n",
    "                            error_score=-1000, \n",
    "                            estimator=pipe, \n",
    "                            n_jobs=-1,\n",
    "                            random_state=0)\n",
    "    hp.fit(X=X, y = y)\n",
    "    print(f\"R2: {hp.best_score_:,.2f}\")\n",
    "    return hp"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c74061d5",
   "metadata": {},
   "source": [
    "## Data Wrangling"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a7fd6506",
   "metadata": {},
   "source": [
    "### Lectura de datos"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "understood-sweet",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_t = pd.read_csv(\"./train_PAY_AMT1.csv\",sep='|')\n",
    "df_v = pd.read_csv(\"./val_PAY_AMT1.csv\",sep='|')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "administrative-database",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(11250, 23) (3750, 22)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CUSTOMER_ID</th>\n",
       "      <th>LIMIT_BAL</th>\n",
       "      <th>SEX</th>\n",
       "      <th>EDUCATION</th>\n",
       "      <th>MARRIAGE</th>\n",
       "      <th>AGE</th>\n",
       "      <th>PAY_2</th>\n",
       "      <th>PAY_3</th>\n",
       "      <th>PAY_4</th>\n",
       "      <th>PAY_5</th>\n",
       "      <th>PAY_6</th>\n",
       "      <th>BILL_AMT1</th>\n",
       "      <th>BILL_AMT2</th>\n",
       "      <th>BILL_AMT3</th>\n",
       "      <th>BILL_AMT4</th>\n",
       "      <th>BILL_AMT5</th>\n",
       "      <th>BILL_AMT6</th>\n",
       "      <th>PAY_AMT1</th>\n",
       "      <th>PAY_AMT2</th>\n",
       "      <th>PAY_AMT3</th>\n",
       "      <th>PAY_AMT4</th>\n",
       "      <th>PAY_AMT5</th>\n",
       "      <th>PAY_AMT6</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2770</td>\n",
       "      <td>130000.0000</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>32</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>119312.0000</td>\n",
       "      <td>116259.0000</td>\n",
       "      <td>103438.0000</td>\n",
       "      <td>49319.0000</td>\n",
       "      <td>91191.0000</td>\n",
       "      <td>82168.0000</td>\n",
       "      <td>20021.0000</td>\n",
       "      <td>40354.0000</td>\n",
       "      <td>20000.0000</td>\n",
       "      <td>43608.0000</td>\n",
       "      <td>103.0000</td>\n",
       "      <td>10000.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>21621</td>\n",
       "      <td>10000.0000</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>22</td>\n",
       "      <td>-2</td>\n",
       "      <td>-2</td>\n",
       "      <td>-2</td>\n",
       "      <td>-2</td>\n",
       "      <td>-2</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>-400.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>400.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>23530</td>\n",
       "      <td>360000.0000</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>46</td>\n",
       "      <td>0</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>58389.0000</td>\n",
       "      <td>42094.0000</td>\n",
       "      <td>10594.0000</td>\n",
       "      <td>31532.0000</td>\n",
       "      <td>46342.0000</td>\n",
       "      <td>56571.0000</td>\n",
       "      <td>20000.0000</td>\n",
       "      <td>10600.0000</td>\n",
       "      <td>30000.0000</td>\n",
       "      <td>20000.0000</td>\n",
       "      <td>15000.0000</td>\n",
       "      <td>10000.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>27980</td>\n",
       "      <td>80000.0000</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>60</td>\n",
       "      <td>-2</td>\n",
       "      <td>-2</td>\n",
       "      <td>-2</td>\n",
       "      <td>-2</td>\n",
       "      <td>-2</td>\n",
       "      <td>577.0000</td>\n",
       "      <td>494.0000</td>\n",
       "      <td>438.0000</td>\n",
       "      <td>387.0000</td>\n",
       "      <td>246.0000</td>\n",
       "      <td>939.0000</td>\n",
       "      <td>500.0000</td>\n",
       "      <td>438.0000</td>\n",
       "      <td>387.0000</td>\n",
       "      <td>246.0000</td>\n",
       "      <td>939.0000</td>\n",
       "      <td>350.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>20014</td>\n",
       "      <td>230000.0000</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>28</td>\n",
       "      <td>-1</td>\n",
       "      <td>-1</td>\n",
       "      <td>-2</td>\n",
       "      <td>-1</td>\n",
       "      <td>-1</td>\n",
       "      <td>875.0000</td>\n",
       "      <td>375.0000</td>\n",
       "      <td>-250.0000</td>\n",
       "      <td>-125.0000</td>\n",
       "      <td>609.0000</td>\n",
       "      <td>362.0000</td>\n",
       "      <td>1000.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>4000.0000</td>\n",
       "      <td>3000.0000</td>\n",
       "      <td>9000.0000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   CUSTOMER_ID   LIMIT_BAL  SEX  EDUCATION  MARRIAGE  AGE  PAY_2  PAY_3  \\\n",
       "0         2770 130000.0000    2          3         2   32      0      0   \n",
       "1        21621  10000.0000    2          2         2   22     -2     -2   \n",
       "2        23530 360000.0000    2          1         1   46      0     -1   \n",
       "3        27980  80000.0000    2          2         2   60     -2     -2   \n",
       "4        20014 230000.0000    2          2         2   28     -1     -1   \n",
       "\n",
       "   PAY_4  PAY_5  PAY_6   BILL_AMT1   BILL_AMT2   BILL_AMT3  BILL_AMT4  \\\n",
       "0      0      0      2 119312.0000 116259.0000 103438.0000 49319.0000   \n",
       "1     -2     -2     -2      0.0000      0.0000      0.0000  -400.0000   \n",
       "2      0      0      0  58389.0000  42094.0000  10594.0000 31532.0000   \n",
       "3     -2     -2     -2    577.0000    494.0000    438.0000   387.0000   \n",
       "4     -2     -1     -1    875.0000    375.0000   -250.0000  -125.0000   \n",
       "\n",
       "   BILL_AMT5  BILL_AMT6   PAY_AMT1   PAY_AMT2   PAY_AMT3   PAY_AMT4  \\\n",
       "0 91191.0000 82168.0000 20021.0000 40354.0000 20000.0000 43608.0000   \n",
       "1     0.0000     0.0000     0.0000     0.0000     0.0000   400.0000   \n",
       "2 46342.0000 56571.0000 20000.0000 10600.0000 30000.0000 20000.0000   \n",
       "3   246.0000   939.0000   500.0000   438.0000   387.0000   246.0000   \n",
       "4   609.0000   362.0000  1000.0000     0.0000     0.0000  4000.0000   \n",
       "\n",
       "    PAY_AMT5   PAY_AMT6  \n",
       "0   103.0000 10000.0000  \n",
       "1     0.0000     0.0000  \n",
       "2 15000.0000 10000.0000  \n",
       "3   939.0000   350.0000  \n",
       "4  3000.0000  9000.0000  "
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(df_t.shape,df_v.shape)\n",
    "df_t.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "conservative-settlement",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>variable</th>\n",
       "      <th>q_nan</th>\n",
       "      <th>p_nan</th>\n",
       "      <th>q_zeros</th>\n",
       "      <th>p_zeros</th>\n",
       "      <th>unique</th>\n",
       "      <th>type</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>CUSTOMER_ID</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>11250</td>\n",
       "      <td>int64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>LIMIT_BAL</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>73</td>\n",
       "      <td>float64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>SEX</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>2</td>\n",
       "      <td>int64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>EDUCATION</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>5</td>\n",
       "      <td>0.0004</td>\n",
       "      <td>7</td>\n",
       "      <td>int64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>MARRIAGE</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>17</td>\n",
       "      <td>0.0015</td>\n",
       "      <td>4</td>\n",
       "      <td>int64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>AGE</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>53</td>\n",
       "      <td>int64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>PAY_2</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>5949</td>\n",
       "      <td>0.5288</td>\n",
       "      <td>10</td>\n",
       "      <td>int64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>PAY_3</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>5990</td>\n",
       "      <td>0.5324</td>\n",
       "      <td>10</td>\n",
       "      <td>int64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>PAY_4</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>6245</td>\n",
       "      <td>0.5551</td>\n",
       "      <td>10</td>\n",
       "      <td>int64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>PAY_5</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>6405</td>\n",
       "      <td>0.5693</td>\n",
       "      <td>8</td>\n",
       "      <td>int64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>PAY_6</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>6195</td>\n",
       "      <td>0.5507</td>\n",
       "      <td>10</td>\n",
       "      <td>int64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>BILL_AMT1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>732</td>\n",
       "      <td>0.0651</td>\n",
       "      <td>9424</td>\n",
       "      <td>float64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>BILL_AMT2</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>923</td>\n",
       "      <td>0.0820</td>\n",
       "      <td>9334</td>\n",
       "      <td>float64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>BILL_AMT3</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>1023</td>\n",
       "      <td>0.0909</td>\n",
       "      <td>9189</td>\n",
       "      <td>float64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>BILL_AMT4</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>1145</td>\n",
       "      <td>0.1018</td>\n",
       "      <td>9078</td>\n",
       "      <td>float64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>BILL_AMT5</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>1255</td>\n",
       "      <td>0.1116</td>\n",
       "      <td>8828</td>\n",
       "      <td>float64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>BILL_AMT6</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>1477</td>\n",
       "      <td>0.1313</td>\n",
       "      <td>8611</td>\n",
       "      <td>float64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>PAY_AMT1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>1976</td>\n",
       "      <td>0.1756</td>\n",
       "      <td>4111</td>\n",
       "      <td>float64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>PAY_AMT2</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>1977</td>\n",
       "      <td>0.1757</td>\n",
       "      <td>4100</td>\n",
       "      <td>float64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>PAY_AMT3</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>2181</td>\n",
       "      <td>0.1939</td>\n",
       "      <td>3938</td>\n",
       "      <td>float64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>PAY_AMT4</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>2356</td>\n",
       "      <td>0.2094</td>\n",
       "      <td>3617</td>\n",
       "      <td>float64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>PAY_AMT5</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>2489</td>\n",
       "      <td>0.2212</td>\n",
       "      <td>3534</td>\n",
       "      <td>float64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>PAY_AMT6</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>2683</td>\n",
       "      <td>0.2385</td>\n",
       "      <td>3587</td>\n",
       "      <td>float64</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       variable  q_nan  p_nan  q_zeros  p_zeros  unique     type\n",
       "0   CUSTOMER_ID      0 0.0000        0   0.0000   11250    int64\n",
       "1     LIMIT_BAL      0 0.0000        0   0.0000      73  float64\n",
       "2           SEX      0 0.0000        0   0.0000       2    int64\n",
       "3     EDUCATION      0 0.0000        5   0.0004       7    int64\n",
       "4      MARRIAGE      0 0.0000       17   0.0015       4    int64\n",
       "5           AGE      0 0.0000        0   0.0000      53    int64\n",
       "6         PAY_2      0 0.0000     5949   0.5288      10    int64\n",
       "7         PAY_3      0 0.0000     5990   0.5324      10    int64\n",
       "8         PAY_4      0 0.0000     6245   0.5551      10    int64\n",
       "9         PAY_5      0 0.0000     6405   0.5693       8    int64\n",
       "10        PAY_6      0 0.0000     6195   0.5507      10    int64\n",
       "11    BILL_AMT1      0 0.0000      732   0.0651    9424  float64\n",
       "12    BILL_AMT2      0 0.0000      923   0.0820    9334  float64\n",
       "13    BILL_AMT3      0 0.0000     1023   0.0909    9189  float64\n",
       "14    BILL_AMT4      0 0.0000     1145   0.1018    9078  float64\n",
       "15    BILL_AMT5      0 0.0000     1255   0.1116    8828  float64\n",
       "16    BILL_AMT6      0 0.0000     1477   0.1313    8611  float64\n",
       "17     PAY_AMT1      0 0.0000     1976   0.1756    4111  float64\n",
       "18     PAY_AMT2      0 0.0000     1977   0.1757    4100  float64\n",
       "19     PAY_AMT3      0 0.0000     2181   0.1939    3938  float64\n",
       "20     PAY_AMT4      0 0.0000     2356   0.2094    3617  float64\n",
       "21     PAY_AMT5      0 0.0000     2489   0.2212    3534  float64\n",
       "22     PAY_AMT6      0 0.0000     2683   0.2385    3587  float64"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "status(df_t)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "voluntary-jacob",
   "metadata": {},
   "source": [
    "* Todos los datos son númericos\n",
    "* No hay ningún dato faltante"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "corporate-costume",
   "metadata": {},
   "source": [
    "### Selección de variables"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "mounted-following",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(23, 23)"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ls_pay = [f\"PAY_{x}\" for x in range(2,7)]\n",
    "ls_bill_amt = [f\"BILL_AMT{x}\" for x in range(1,7)]\n",
    "ls_pay_amt = [f\"PAY_AMT{x}\" for x in range(2,7)]\n",
    "\n",
    "ls_features = [\"CUSTOMER_ID\",\"LIMIT_BAL\",\"SEX\",\"EDUCATION\",\"MARRIAGE\",\"AGE\",\"default.payment.next.month\"]\\\n",
    "                + ls_pay\\\n",
    "                + ls_bill_amt\\\n",
    "                + ls_pay_amt\n",
    "\n",
    "ls_id = [\"CUSTOMER_ID\"]\n",
    "ls_cont = [\"LIMIT_BAL\"]+ls_bill_amt+ls_pay_amt\n",
    "ls_disc = [\"SEX\",\"EDUCATION\",\"MARRIAGE\",\"AGE\"]+ls_pay\n",
    "target = [\"PAY_AMT1\"]\n",
    "len(ls_features),len(ls_id+ls_cont+ls_disc+target)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "anonymous-portfolio",
   "metadata": {},
   "source": [
    "### Consistencia"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "cardiac-penny",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "SEX [1 2]\n",
      "EDUCATION [0 1 2 3 4 5 6]\n",
      "MARRIAGE [0 1 2 3]\n",
      "AGE [21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44\n",
      " 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 69\n",
      " 72 73 74 75 79]\n",
      "PAY_2 [-2 -1  0  1  2  3  4  5  6  7]\n",
      "PAY_3 [-2 -1  0  1  2  3  4  5  6  7]\n",
      "PAY_4 [-2 -1  0  1  2  3  4  5  6  7]\n",
      "PAY_5 [-2 -1  0  2  3  4  5  7]\n",
      "PAY_6 [-2 -1  0  2  3  4  5  6  7  8]\n"
     ]
    }
   ],
   "source": [
    "for v in ls_disc:\n",
    "    print(v, np.unique(df_t[v]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "comic-welsh",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_t[v] = df_t[v].astype(\"category\")\n",
    "df_v[v] = df_v[v].astype(\"category\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "respiratory-smoke",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "LIMIT_BAL\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "count    11250.0000\n",
       "mean    166728.8889\n",
       "std     129520.8945\n",
       "min      10000.0000\n",
       "25%      50000.0000\n",
       "50%     140000.0000\n",
       "75%     240000.0000\n",
       "max     800000.0000\n",
       "Name: LIMIT_BAL, dtype: float64"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "BILL_AMT1\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "count     11250.0000\n",
       "mean      51119.5371\n",
       "std       72401.7862\n",
       "min     -154973.0000\n",
       "25%        3811.7500\n",
       "50%       23253.5000\n",
       "75%       67275.2500\n",
       "max      613860.0000\n",
       "Name: BILL_AMT1, dtype: float64"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "BILL_AMT2\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "count    11250.0000\n",
       "mean     49353.0026\n",
       "std      70403.7481\n",
       "min     -69777.0000\n",
       "25%       3260.2500\n",
       "50%      22489.5000\n",
       "75%      64656.2500\n",
       "max     743970.0000\n",
       "Name: BILL_AMT2, dtype: float64"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "BILL_AMT3\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "count     11250.0000\n",
       "mean      47221.8023\n",
       "std       67570.5582\n",
       "min     -157264.0000\n",
       "25%        2988.2500\n",
       "50%       20965.0000\n",
       "75%       61787.0000\n",
       "max      578971.0000\n",
       "Name: BILL_AMT3, dtype: float64"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "BILL_AMT4\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "count     11250.0000\n",
       "mean      43500.9363\n",
       "std       63547.7622\n",
       "min     -170000.0000\n",
       "25%        2518.5000\n",
       "50%       19583.0000\n",
       "75%       55422.7500\n",
       "max      628699.0000\n",
       "Name: BILL_AMT4, dtype: float64"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "BILL_AMT5\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "count    11250.0000\n",
       "mean     40513.1660\n",
       "std      60364.2899\n",
       "min     -61372.0000\n",
       "25%       2000.0000\n",
       "50%      18660.5000\n",
       "75%      50851.5000\n",
       "max     823540.0000\n",
       "Name: BILL_AMT5, dtype: float64"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "BILL_AMT6\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "count     11250.0000\n",
       "mean      38768.7940\n",
       "std       58586.3520\n",
       "min     -339603.0000\n",
       "25%        1320.0000\n",
       "50%       17424.5000\n",
       "75%       49448.7500\n",
       "max      513798.0000\n",
       "Name: BILL_AMT6, dtype: float64"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "PAY_AMT2\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "count     11250.0000\n",
       "mean       5996.0311\n",
       "std       21141.1167\n",
       "min           0.0000\n",
       "25%        1000.0000\n",
       "50%        2027.5000\n",
       "75%        5000.0000\n",
       "max     1215471.0000\n",
       "Name: PAY_AMT2, dtype: float64"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "PAY_AMT3\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "count    11250.0000\n",
       "mean      5183.2031\n",
       "std      18129.0905\n",
       "min          0.0000\n",
       "25%        409.0000\n",
       "50%       1854.5000\n",
       "75%       4500.0000\n",
       "max     889043.0000\n",
       "Name: PAY_AMT3, dtype: float64"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "PAY_AMT4\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "count    11250.0000\n",
       "mean      4938.9429\n",
       "std      17391.7858\n",
       "min          0.0000\n",
       "25%        307.2500\n",
       "50%       1500.0000\n",
       "75%       4040.0000\n",
       "max     621000.0000\n",
       "Name: PAY_AMT4, dtype: float64"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "PAY_AMT5\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "count    11250.0000\n",
       "mean      4709.2549\n",
       "std      14226.1720\n",
       "min          0.0000\n",
       "25%        265.2500\n",
       "50%       1500.0000\n",
       "75%       4001.0000\n",
       "max     417990.0000\n",
       "Name: PAY_AMT5, dtype: float64"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "PAY_AMT6\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "count    11250.0000\n",
       "mean      5363.7463\n",
       "std      18216.3870\n",
       "min          0.0000\n",
       "25%        133.0000\n",
       "50%       1500.0000\n",
       "75%       4001.0000\n",
       "max     527143.0000\n",
       "Name: PAY_AMT6, dtype: float64"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "for v in ls_cont:\n",
    "    print(v)\n",
    "    display(df_t[v].describe())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "rotary-float",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAX0AAAD4CAYAAAAAczaOAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjMuNCwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8QVMy6AAAACXBIWXMAAAsTAAALEwEAmpwYAAAU4UlEQVR4nO3df4wc513H8fcXu/lBXGKHlJMVWzgVFhBqSJNT4qoVOjfgOAnCQUqrVBFxSpAlCFIRRtShKoE2FS5qKI2AUqsxuPy6hkCJFReCcXxC/aP5YZLG+dGQS+pSW8GmtePiNlS4fPljn2vWx97tnm93b5rn/ZJWO/PMMzvfmZ37zNzs3F5kJpKkOnzPQhcgSRoeQ1+SKmLoS1JFDH1JqoihL0kVWbzQBczmwgsvzFWrVi10Gaf5xje+wXnnnbfQZcyoyfU1uTawvvlocm3Q7PoGUdv+/fu/mplv6DgxMxv7uPzyy7Np9u3bt9AlzKrJ9TW5tkzrm48m15bZ7PoGURvwWM6Qq17ekaSKGPqSVBFDX5IqYuhLUkUMfUmqiKEvSRUx9CWpIoa+JFXE0JekijT6axg0N6u27mbLmlPcsnV3174Ht103hIokNY1n+pJUEUNfkipi6EtSRQx9SaqIoS9JFTH0Jakihr4kVcTQl6SKGPqSVBFDX5IqYuhLUkUMfUmqiKEvSRUx9CWpIoa+JFXE0Jekihj6klQRQ1+SKmLoS1JFDH1JqoihL0kV6Sn0I+JgRByIiCci4rHSdkFE7ImI58vzstIeEXF3RExGxJMRcVnb62wq/Z+PiE2DWSVJ0kzmcqa/LjMvzczRMr4V2JuZq4G9ZRzgGmB1eWwGPg6tgwRwB3AlcAVwx9SBQpI0HPO5vLMR2FmGdwLXt7V/Kls+DyyNiOXA1cCezDyWmceBPcCGeSxfkjRHkZndO0V8CTgOJPCJzNweES9n5tIyPYDjmbk0Ih4AtmXm58q0vcB7gTHgnMy8s7S/H3glMz8ybVmbaf2GwMjIyOXj4+N9WdF+OXnyJEuWLFnoMjo6cPgEI+fCkVe6911z0fmDL2iaJm87sL75aHJt0Oz6BlHbunXr9rddlTnN4h5f422ZeTgifgDYExFfbJ+YmRkR3Y8ePcjM7cB2gNHR0RwbG+vHy/bNxMQETatpyi1bd7NlzSnuOtD9bT1409jgC5qmydsOrG8+mlwbNLu+YdfW0+WdzDxcno8Cn6F1Tf5IuWxDeT5auh8GVrbNvqK0zdQuSRqSrqEfEedFxOunhoH1wFPALmDqDpxNwP1leBdwc7mLZy1wIjNfAh4E1kfEsvIB7vrSJkkakl4u74wAn2ldtmcx8FeZ+Y8R8Shwb0TcCnwZeGfp/1ngWmAS+CbwboDMPBYRHwQeLf0+kJnH+rYmkqSuuoZ+Zr4I/ESH9q8BV3VoT+C2GV5rB7Bj7mVKkvrBv8iVpIoY+pJUEUNfkipi6EtSRQx9SaqIoS9JFTH0Jakihr4kVcTQl6SKGPqSVBFDX5IqYuhLUkUMfUmqiKEvSRUx9CWpIoa+JFXE0Jekihj6klQRQ1+SKmLoS1JFDH1JqoihL0kVMfQlqSKGviRVxNCXpIoY+pJUEUNfkirSc+hHxKKIeDwiHijjF0fEwxExGRGfjoizSvvZZXyyTF/V9hq3l/bnIuLqvq+NJGlWcznTfw/wbNv4h4GPZuYPAceBW0v7rcDx0v7R0o+IuAS4EfgxYAPwxxGxaH7lS5LmoqfQj4gVwHXAJ8t4AG8H7itddgLXl+GNZZwy/arSfyMwnpnfyswvAZPAFX1YB0lSjyIzu3eKuA/4XeD1wK8DtwCfL2fzRMRK4B8y800R8RSwITMPlWkvAFcCv13m+YvSfk+Z575py9oMbAYYGRm5fHx8vA+r2T8nT55kyZIlC11GRwcOn2DkXDjySve+ay46f/AFTdPkbQfWNx9Nrg2aXd8galu3bt3+zBztNG1xt5kj4meAo5m5PyLG+lpZB5m5HdgOMDo6mmNjA1/knExMTNC0mqbcsnU3W9ac4q4DXd9WDt40NviCpmnytgPrm48m1wbNrm/YtXVPB3gr8LMRcS1wDvB9wMeApRGxODNPASuAw6X/YWAlcCgiFgPnA19ra5/SPo8kaQi6XtPPzNszc0VmrqL1QexDmXkTsA+4oXTbBNxfhneVccr0h7J1DWkXcGO5u+diYDXwSN/WRJLUVS9n+jN5LzAeEXcCjwP3lPZ7gD+PiEngGK0DBZn5dETcCzwDnAJuy8xvz2P5kqQ5mlPoZ+YEMFGGX6TD3TeZ+d/AO2aY/0PAh+ZapCSpP/yLXEmqiKEvSRUx9CWpIoa+JFXE0Jekihj6klQRQ1+SKmLoS1JFDH1JqoihL0kVMfQlqSKGviRVxNCXpIoY+pJUEUNfkipi6EtSRQx9SaqIoS9JFTH0Jakihr4kVcTQl6SKGPqSVBFDX5IqYuhLUkUMfUmqiKEvSRUx9CWpIl1DPyLOiYhHIuILEfF0RPxOab84Ih6OiMmI+HREnFXazy7jk2X6qrbXur20PxcRVw9srSRJHfVypv8t4O2Z+RPApcCGiFgLfBj4aGb+EHAcuLX0vxU4Xto/WvoREZcANwI/BmwA/jgiFvVxXSRJXXQN/Ww5WUZfVx4JvB24r7TvBK4vwxvLOGX6VRERpX08M7+VmV8CJoEr+rESkqTe9HRNPyIWRcQTwFFgD/AC8HJmnipdDgEXleGLgK8AlOkngO9vb+8wjyRpCBb30ikzvw1cGhFLgc8APzKogiJiM7AZYGRkhImJiUEt6oycPHmycTVN2bLmFCPntp67WYh1aPK2A+ubjybXBs2ub9i19RT6UzLz5YjYB7wFWBoRi8vZ/ArgcOl2GFgJHIqIxcD5wNfa2qe0z9O+jO3AdoDR0dEcGxub0woN2sTEBE2racotW3ezZc0p7jrQ/W09eNPY4AuapsnbDqxvPppcGzS7vmHX1svdO28oZ/hExLnATwPPAvuAG0q3TcD9ZXhXGadMfygzs7TfWO7uuRhYDTzSp/WQJPWglzP95cDOcqfN9wD3ZuYDEfEMMB4RdwKPA/eU/vcAfx4Rk8AxWnfskJlPR8S9wDPAKeC2ctlIkjQkXUM/M58E3tyh/UU63H2Tmf8NvGOG1/oQ8KG5lylJ6gf/IleSKmLoS1JFDH1JqoihL0kVMfQlqSKGviRVxNCXpIoY+pJUEUNfkipi6EtSRQx9SaqIoS9JFTH0Jakihr4kVcTQl6SKGPqSVBFDX5IqYuhLUkUMfUmqiKEvSRUx9CWpIoa+JFXE0Jekihj6klQRQ1+SKmLoS1JFDH1JqoihL0kV6Rr6EbEyIvZFxDMR8XREvKe0XxAReyLi+fK8rLRHRNwdEZMR8WREXNb2WptK/+cjYtPgVkuS1EkvZ/qngC2ZeQmwFrgtIi4BtgJ7M3M1sLeMA1wDrC6PzcDHoXWQAO4ArgSuAO6YOlBIkoaja+hn5kuZ+a9l+L+AZ4GLgI3AztJtJ3B9Gd4IfCpbPg8sjYjlwNXAnsw8lpnHgT3Ahn6ujCRpdpGZvXeOWAX8C/Am4N8zc2lpD+B4Zi6NiAeAbZn5uTJtL/BeYAw4JzPvLO3vB17JzI9MW8ZmWr8hMDIycvn4+Ph81q/vTp48yZIlSxa6jI4OHD7ByLlw5JXufddcdP7gC5qmydsOrG8+mlwbNLu+QdS2bt26/Zk52mna4l5fJCKWAH8L/Gpmfr2V8y2ZmRHR+9FjFpm5HdgOMDo6mmNjY/142b6ZmJigaTVNuWXrbrasOcVdB7q/rQdvGht8QdM0eduB9c1Hk2uDZtc37Np6Cv2IeB2twP/LzPy70nwkIpZn5kvl8s3R0n4YWNk2+4rSdpjW2X57+8SZl675WLV1d0/9Dm67bsCVSBqmXu7eCeAe4NnM/P22SbuAqTtwNgH3t7XfXO7iWQucyMyXgAeB9RGxrHyAu760SZKGpJcz/bcCPw8ciIgnSttvAtuAeyPiVuDLwDvLtM8C1wKTwDeBdwNk5rGI+CDwaOn3gcw81o+VkCT1pmvolw9kY4bJV3Xon8BtM7zWDmDHXAqUJPWPf5ErSRUx9CWpIoa+JFXE0Jekihj6klQRQ1+SKmLoS1JFDH1JqoihL0kVMfQlqSKGviRVxNCXpIoY+pJUEUNfkipi6EtSRQx9SaqIoS9JFTH0Jakihr4kVcTQl6SKGPqSVBFDX5IqYuhLUkUMfUmqiKEvSRUx9CWpIoa+JFWka+hHxI6IOBoRT7W1XRAReyLi+fK8rLRHRNwdEZMR8WREXNY2z6bS//mI2DSY1ZEkzWZxD33+DPhD4FNtbVuBvZm5LSK2lvH3AtcAq8vjSuDjwJURcQFwBzAKJLA/InZl5vF+rYgGY9XW3T31O7jtugFXIqkfup7pZ+a/AMemNW8EdpbhncD1be2fypbPA0sjYjlwNbAnM4+VoN8DbOhD/ZKkOYjM7N4pYhXwQGa+qYy/nJlLy3AAxzNzaUQ8AGzLzM+VaXtp/QYwBpyTmXeW9vcDr2TmRzosazOwGWBkZOTy8fHx+a5jX508eZIlS5YsdBkdHTh8gpFz4cgrw1/2movO79qnydsOrG8+mlwbNLu+QdS2bt26/Zk52mlaL5d3ZpWZGRHdjxy9v952YDvA6Ohojo2N9eul+2JiYoKm1TTllq272bLmFHcdmPfbOmcHbxrr2qfJ2w6sbz6aXBs0u75h13amd+8cKZdtKM9HS/thYGVbvxWlbaZ2SdIQnWno7wKm7sDZBNzf1n5zuYtnLXAiM18CHgTWR8SycqfP+tImSRqirtcBIuKvaV2TvzAiDtG6C2cbcG9E3Ap8GXhn6f5Z4FpgEvgm8G6AzDwWER8EHi39PpCZ0z8cliQNWNfQz8x3zTDpqg59E7hthtfZAeyYU3WSpL7yL3IlqSKGviRVxNCXpIoY+pJUkeH/FY9ek3r5jp4ta04xNvhSJM3CM31JqoihL0kVMfQlqSKGviRVxNCXpIoY+pJUEUNfkipi6EtSRQx9SaqIoS9JFfFrGDRUvXxdA8DBbdcNuBKpTp7pS1JFPNNXI/kbgTQYnulLUkUMfUmqiKEvSRUx9CWpIn6Qq+9qfuArzY1n+pJUEc/0VYVe/4fvLVt3+1uBXtM805ekinimL03j5wR6LTP0pTPkwUHfjYYe+hGxAfgYsAj4ZGZuG3YN0jB5cFCTDDX0I2IR8EfATwOHgEcjYldmPjPMOqQm6nZw8INm9cOwz/SvACYz80WAiBgHNgKG/ix6PVNUHZq4P0wdkAal1wPdTNtmen01HzgjM4e3sIgbgA2Z+Ytl/OeBKzPzV9r6bAY2l9EfBp4bWoG9uRD46kIXMYsm19fk2sD65qPJtUGz6xtEbT+YmW/oNKFxH+Rm5nZg+0LXMZOIeCwzRxe6jpk0ub4m1wbWNx9Nrg2aXd+waxv2ffqHgZVt4ytKmyRpCIYd+o8CqyPi4og4C7gR2DXkGiSpWkO9vJOZpyLiV4AHad2yuSMznx5mDX3Q2EtPRZPra3JtYH3z0eTaoNn1DbW2oX6QK0laWH73jiRVxNCXpJpkZnUP4B3A08D/AqPTpt0OTNL6+4Cr29o3lLZJYGtb+8XAw6X908BZpf3sMj5Zpq/qtox5rlPH+vq4zXYAR4Gn2touAPYAz5fnZaU9gLtLLU8Cl7XNs6n0fx7Y1NZ+OXCgzHM3r1567LiMabWtBPbR+iO/p4H3NKy+c4BHgC+U+n6n3/vOXPfPDjUuAh4HHmhgbQfLtn8CeKxh7+1S4D7gi8CzwFuaUtuMP8v9Dofvhgfwo7T+8GuCttAHLqH1g3l22SFfKD8Mi8rwG4GzSp9Lyjz3AjeW4T8BfqkM/zLwJ2X4RuDTsy1jnuszY3193GY/CVzG6aH/e5QfYmAr8OEyfC3wD2UnXws83Lajvliel5XhqR+IR0rfKPNeM9syptW2fOoHCHg98G9lOzelvgCWlOHX0Qq6tf3ad2Z7/2daRocafw34K14N/SbVdhC4cFpbU97bncAvluGzaB0EGlHbjD/L/QyG77YH/z/0bwdubxt/kNaR+y3Ag9P7lTfiq8Di0v6dflPzluHFpV/MtIx5rkfH+gawvVZxeug/Bywvw8uB58rwJ4B3Te8HvAv4RFv7J0rbcuCLbe3f6TfTMrrUeT+t73dqXH3A9wL/ClzZr33nTPbPaTWtAPYCbwce6Od+Pd/ayrSD/P/QX/D3Fjgf+BLl7LtJtc328Jr+6S4CvtI2fqi0zdT+/cDLmXlqWvtpr1Wmnyj9Z3qtQdQ9aCOZ+VIZ/g9gpEs9s7Uf6tA+2zI6iohVwJtpnU03pr6IWBQRT9C6RLaH1tlvv/adM9k/2/0B8Bu0LnfSZb5h1waQwD9FxP7yNS3QjPf2YuA/gT+NiMcj4pMRcV5DapvRazb0I+KfI+KpDo+NC13ba1G2TjlyIZcREUuAvwV+NTO/3qT6MvPbmXkprbPqK4AfGWQtvYqInwGOZub+ha5lFm/LzMuAa4DbIuIn2ycu4Hu7mNYlz49n5puBb9C61NKE2mb0mg39zPypzHxTh8f9s8w209dEzNT+NWBpRCye1n7aa5Xp55f+g/gqioX6eosjEbEcoDwf7VLPbO0rOrTPtozTRMTraAX+X2bm3zWtvimZ+TKtD53fQv/2nTPZP6e8FfjZiDgIjNO6xPOxhtQGQGYeLs9Hgc/QOmg24b09BBzKzIfL+H20DgJNqG1Gr9nQP0O7gBsj4uyIuBhYTeuDlI5fH1GOsPuAG8r8m2hdT556rU1l+AbgodJ/pmXMx0J9vUX7Ok5f95ujZS1wovwq+iCwPiKWRcQyYD2t67gvAV+PiLUREcDNdN6O7cv4jjLPPcCzmfn7DazvDRGxtAyfS+vzhmfp375zJvsnAJl5e2auyMxVZb6HMvOmJtRWttd5EfH6qWFa78lTNOC9zcz/AL4SET9cmq6idQfZgtc2q14v/r+WHsDP0TpKfws4wukfNL2P1vXW5yiflJf2a2ndFfIC8L629jfS2rkngb8Bzi7t55TxyTL9jd2WMc916lhfH7fZXwMvAf9Ttt2ttK7L7qV129g/AxeUvkHrn+W8QOt2s/YPy3+hbJNJ4N1t7aO0fphfAP6QV29N67iMabW9jdavt0/Suq3vibI9mlLfj9O6HfLJ8hq/1e99Z6775wzv8Riv3r3TiNpKny/w6u2u75ttuy/Ae3sp8Fh5b/+e1t03jahtpodfwyBJFfHyjiRVxNCXpIoY+pJUEUNfkipi6EtSRQx9SaqIoS9JFfk/jrvmI9vfUscAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df_t[\"BILL_AMT1\"].hist(bins=30)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "russian-raise",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "BILL_AMT1\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "True    0.9158\n",
       "False   0.0842\n",
       "Name: BILL_AMT1, dtype: float64"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "BILL_AMT2\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "True    0.8960\n",
       "False   0.1040\n",
       "Name: BILL_AMT2, dtype: float64"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "BILL_AMT3\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "True    0.8874\n",
       "False   0.1126\n",
       "Name: BILL_AMT3, dtype: float64"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "BILL_AMT4\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "True    0.8758\n",
       "False   0.1242\n",
       "Name: BILL_AMT4, dtype: float64"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "BILL_AMT5\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "True    0.8655\n",
       "False   0.1345\n",
       "Name: BILL_AMT5, dtype: float64"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "BILL_AMT6\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "True    0.8444\n",
       "False   0.1556\n",
       "Name: BILL_AMT6, dtype: float64"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#porcentaje de negativos en montos por pagar\n",
    "for v in ls_bill_amt:\n",
    "    print(v)\n",
    "    display((df_t[v]>0).value_counts(1))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "sophisticated-viewer",
   "metadata": {},
   "source": [
    "**Se supondrá que los valores negativos es saldo a favor**"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "disturbed-california",
   "metadata": {},
   "source": [
    "### Ingeniería de variables"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "confidential-package",
   "metadata": {},
   "source": [
    "#### total continuas mensuales"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "purple-legislature",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_t[\"BILL_AMT_mean\"] = df_t[ls_bill_amt].mean(axis=1)\n",
    "df_v[\"BILL_AMT_mean\"] = df_v[ls_bill_amt].mean(axis=1)\n",
    "\n",
    "df_t[\"PAY_AMT_mean\"] = df_t[ls_pay_amt].mean(axis=1)\n",
    "df_v[\"PAY_AMT_mean\"] = df_v[ls_pay_amt].mean(axis=1)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "alien-chick",
   "metadata": {},
   "source": [
    "#### diferencia entre deuda y pago realizado"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "dense-engagement",
   "metadata": {},
   "outputs": [],
   "source": [
    "for period in range(2,6):\n",
    "    df_t[f\"BILL_PAY_diff{period}\"] = df_t[f\"BILL_AMT{period}\"] - df_t[f\"PAY_AMT{period}\"]\n",
    "    df_v[f\"BILL_PAY_diff{period}\"] = df_v[f\"BILL_AMT{period}\"] - df_v[f\"PAY_AMT{period}\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "massive-intelligence",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CUSTOMER_ID</th>\n",
       "      <th>LIMIT_BAL</th>\n",
       "      <th>SEX</th>\n",
       "      <th>EDUCATION</th>\n",
       "      <th>MARRIAGE</th>\n",
       "      <th>AGE</th>\n",
       "      <th>PAY_2</th>\n",
       "      <th>PAY_3</th>\n",
       "      <th>PAY_4</th>\n",
       "      <th>PAY_5</th>\n",
       "      <th>PAY_6</th>\n",
       "      <th>BILL_AMT1</th>\n",
       "      <th>BILL_AMT2</th>\n",
       "      <th>BILL_AMT3</th>\n",
       "      <th>BILL_AMT4</th>\n",
       "      <th>BILL_AMT5</th>\n",
       "      <th>BILL_AMT6</th>\n",
       "      <th>PAY_AMT1</th>\n",
       "      <th>PAY_AMT2</th>\n",
       "      <th>PAY_AMT3</th>\n",
       "      <th>PAY_AMT4</th>\n",
       "      <th>PAY_AMT5</th>\n",
       "      <th>PAY_AMT6</th>\n",
       "      <th>BILL_AMT_mean</th>\n",
       "      <th>PAY_AMT_mean</th>\n",
       "      <th>BILL_PAY_diff2</th>\n",
       "      <th>BILL_PAY_diff3</th>\n",
       "      <th>BILL_PAY_diff4</th>\n",
       "      <th>BILL_PAY_diff5</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2770</td>\n",
       "      <td>130000.0000</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>32</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>119312.0000</td>\n",
       "      <td>116259.0000</td>\n",
       "      <td>103438.0000</td>\n",
       "      <td>49319.0000</td>\n",
       "      <td>91191.0000</td>\n",
       "      <td>82168.0000</td>\n",
       "      <td>20021.0000</td>\n",
       "      <td>40354.0000</td>\n",
       "      <td>20000.0000</td>\n",
       "      <td>43608.0000</td>\n",
       "      <td>103.0000</td>\n",
       "      <td>10000.0000</td>\n",
       "      <td>93614.5000</td>\n",
       "      <td>22813.0000</td>\n",
       "      <td>75905.0000</td>\n",
       "      <td>83438.0000</td>\n",
       "      <td>5711.0000</td>\n",
       "      <td>91088.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>21621</td>\n",
       "      <td>10000.0000</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>22</td>\n",
       "      <td>-2</td>\n",
       "      <td>-2</td>\n",
       "      <td>-2</td>\n",
       "      <td>-2</td>\n",
       "      <td>-2</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>-400.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>400.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>-66.6667</td>\n",
       "      <td>80.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>-800.0000</td>\n",
       "      <td>0.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>23530</td>\n",
       "      <td>360000.0000</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>46</td>\n",
       "      <td>0</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>58389.0000</td>\n",
       "      <td>42094.0000</td>\n",
       "      <td>10594.0000</td>\n",
       "      <td>31532.0000</td>\n",
       "      <td>46342.0000</td>\n",
       "      <td>56571.0000</td>\n",
       "      <td>20000.0000</td>\n",
       "      <td>10600.0000</td>\n",
       "      <td>30000.0000</td>\n",
       "      <td>20000.0000</td>\n",
       "      <td>15000.0000</td>\n",
       "      <td>10000.0000</td>\n",
       "      <td>40920.3333</td>\n",
       "      <td>17120.0000</td>\n",
       "      <td>31494.0000</td>\n",
       "      <td>-19406.0000</td>\n",
       "      <td>11532.0000</td>\n",
       "      <td>31342.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>27980</td>\n",
       "      <td>80000.0000</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>60</td>\n",
       "      <td>-2</td>\n",
       "      <td>-2</td>\n",
       "      <td>-2</td>\n",
       "      <td>-2</td>\n",
       "      <td>-2</td>\n",
       "      <td>577.0000</td>\n",
       "      <td>494.0000</td>\n",
       "      <td>438.0000</td>\n",
       "      <td>387.0000</td>\n",
       "      <td>246.0000</td>\n",
       "      <td>939.0000</td>\n",
       "      <td>500.0000</td>\n",
       "      <td>438.0000</td>\n",
       "      <td>387.0000</td>\n",
       "      <td>246.0000</td>\n",
       "      <td>939.0000</td>\n",
       "      <td>350.0000</td>\n",
       "      <td>513.5000</td>\n",
       "      <td>472.0000</td>\n",
       "      <td>56.0000</td>\n",
       "      <td>51.0000</td>\n",
       "      <td>141.0000</td>\n",
       "      <td>-693.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>20014</td>\n",
       "      <td>230000.0000</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>28</td>\n",
       "      <td>-1</td>\n",
       "      <td>-1</td>\n",
       "      <td>-2</td>\n",
       "      <td>-1</td>\n",
       "      <td>-1</td>\n",
       "      <td>875.0000</td>\n",
       "      <td>375.0000</td>\n",
       "      <td>-250.0000</td>\n",
       "      <td>-125.0000</td>\n",
       "      <td>609.0000</td>\n",
       "      <td>362.0000</td>\n",
       "      <td>1000.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>4000.0000</td>\n",
       "      <td>3000.0000</td>\n",
       "      <td>9000.0000</td>\n",
       "      <td>307.6667</td>\n",
       "      <td>3200.0000</td>\n",
       "      <td>375.0000</td>\n",
       "      <td>-250.0000</td>\n",
       "      <td>-4125.0000</td>\n",
       "      <td>-2391.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11245</th>\n",
       "      <td>27432</td>\n",
       "      <td>150000.0000</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>27</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>138066.0000</td>\n",
       "      <td>140522.0000</td>\n",
       "      <td>138722.0000</td>\n",
       "      <td>130494.0000</td>\n",
       "      <td>147851.0000</td>\n",
       "      <td>145535.0000</td>\n",
       "      <td>5767.0000</td>\n",
       "      <td>6100.0000</td>\n",
       "      <td>30000.0000</td>\n",
       "      <td>19227.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>2606.0000</td>\n",
       "      <td>140198.3333</td>\n",
       "      <td>11586.6000</td>\n",
       "      <td>134422.0000</td>\n",
       "      <td>108722.0000</td>\n",
       "      <td>111267.0000</td>\n",
       "      <td>147851.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11246</th>\n",
       "      <td>24219</td>\n",
       "      <td>210000.0000</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>36</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>210463.0000</td>\n",
       "      <td>109132.0000</td>\n",
       "      <td>47182.0000</td>\n",
       "      <td>37067.0000</td>\n",
       "      <td>24511.0000</td>\n",
       "      <td>22634.0000</td>\n",
       "      <td>5187.0000</td>\n",
       "      <td>2043.0000</td>\n",
       "      <td>1552.0000</td>\n",
       "      <td>2013.0000</td>\n",
       "      <td>3002.0000</td>\n",
       "      <td>3003.0000</td>\n",
       "      <td>75164.8333</td>\n",
       "      <td>2322.6000</td>\n",
       "      <td>107089.0000</td>\n",
       "      <td>45630.0000</td>\n",
       "      <td>35054.0000</td>\n",
       "      <td>21509.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11247</th>\n",
       "      <td>21973</td>\n",
       "      <td>60000.0000</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>34</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>9928.0000</td>\n",
       "      <td>11261.0000</td>\n",
       "      <td>12853.0000</td>\n",
       "      <td>12352.0000</td>\n",
       "      <td>12703.0000</td>\n",
       "      <td>13338.0000</td>\n",
       "      <td>1500.0000</td>\n",
       "      <td>2090.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>700.0000</td>\n",
       "      <td>1000.0000</td>\n",
       "      <td>1400.0000</td>\n",
       "      <td>12072.5000</td>\n",
       "      <td>1038.0000</td>\n",
       "      <td>9171.0000</td>\n",
       "      <td>12853.0000</td>\n",
       "      <td>11652.0000</td>\n",
       "      <td>11703.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11248</th>\n",
       "      <td>5694</td>\n",
       "      <td>360000.0000</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>34</td>\n",
       "      <td>-2</td>\n",
       "      <td>-2</td>\n",
       "      <td>-2</td>\n",
       "      <td>-2</td>\n",
       "      <td>-2</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11249</th>\n",
       "      <td>21277</td>\n",
       "      <td>50000.0000</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>33</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>26740.0000</td>\n",
       "      <td>12498.0000</td>\n",
       "      <td>16264.0000</td>\n",
       "      <td>17918.0000</td>\n",
       "      <td>16072.0000</td>\n",
       "      <td>17041.0000</td>\n",
       "      <td>2000.0000</td>\n",
       "      <td>4000.0000</td>\n",
       "      <td>2000.0000</td>\n",
       "      <td>1000.0000</td>\n",
       "      <td>2000.0000</td>\n",
       "      <td>2396.0000</td>\n",
       "      <td>17755.5000</td>\n",
       "      <td>2279.2000</td>\n",
       "      <td>8498.0000</td>\n",
       "      <td>14264.0000</td>\n",
       "      <td>16918.0000</td>\n",
       "      <td>14072.0000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>11250 rows × 29 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       CUSTOMER_ID   LIMIT_BAL  SEX  EDUCATION  MARRIAGE  AGE  PAY_2  PAY_3  \\\n",
       "0             2770 130000.0000    2          3         2   32      0      0   \n",
       "1            21621  10000.0000    2          2         2   22     -2     -2   \n",
       "2            23530 360000.0000    2          1         1   46      0     -1   \n",
       "3            27980  80000.0000    2          2         2   60     -2     -2   \n",
       "4            20014 230000.0000    2          2         2   28     -1     -1   \n",
       "...            ...         ...  ...        ...       ...  ...    ...    ...   \n",
       "11245        27432 150000.0000    2          1         2   27      0      0   \n",
       "11246        24219 210000.0000    1          1         2   36      0      0   \n",
       "11247        21973  60000.0000    2          3         1   34      0      0   \n",
       "11248         5694 360000.0000    2          2         2   34     -2     -2   \n",
       "11249        21277  50000.0000    2          2         2   33      0      0   \n",
       "\n",
       "       PAY_4  PAY_5 PAY_6   BILL_AMT1   BILL_AMT2   BILL_AMT3   BILL_AMT4  \\\n",
       "0          0      0     2 119312.0000 116259.0000 103438.0000  49319.0000   \n",
       "1         -2     -2    -2      0.0000      0.0000      0.0000   -400.0000   \n",
       "2          0      0     0  58389.0000  42094.0000  10594.0000  31532.0000   \n",
       "3         -2     -2    -2    577.0000    494.0000    438.0000    387.0000   \n",
       "4         -2     -1    -1    875.0000    375.0000   -250.0000   -125.0000   \n",
       "...      ...    ...   ...         ...         ...         ...         ...   \n",
       "11245      0      0     2 138066.0000 140522.0000 138722.0000 130494.0000   \n",
       "11246      0      0     0 210463.0000 109132.0000  47182.0000  37067.0000   \n",
       "11247      2      0     0   9928.0000  11261.0000  12853.0000  12352.0000   \n",
       "11248     -2     -2    -2      0.0000      0.0000      0.0000      0.0000   \n",
       "11249      0      0     0  26740.0000  12498.0000  16264.0000  17918.0000   \n",
       "\n",
       "        BILL_AMT5   BILL_AMT6   PAY_AMT1   PAY_AMT2   PAY_AMT3   PAY_AMT4  \\\n",
       "0      91191.0000  82168.0000 20021.0000 40354.0000 20000.0000 43608.0000   \n",
       "1          0.0000      0.0000     0.0000     0.0000     0.0000   400.0000   \n",
       "2      46342.0000  56571.0000 20000.0000 10600.0000 30000.0000 20000.0000   \n",
       "3        246.0000    939.0000   500.0000   438.0000   387.0000   246.0000   \n",
       "4        609.0000    362.0000  1000.0000     0.0000     0.0000  4000.0000   \n",
       "...           ...         ...        ...        ...        ...        ...   \n",
       "11245 147851.0000 145535.0000  5767.0000  6100.0000 30000.0000 19227.0000   \n",
       "11246  24511.0000  22634.0000  5187.0000  2043.0000  1552.0000  2013.0000   \n",
       "11247  12703.0000  13338.0000  1500.0000  2090.0000     0.0000   700.0000   \n",
       "11248      0.0000      0.0000     0.0000     0.0000     0.0000     0.0000   \n",
       "11249  16072.0000  17041.0000  2000.0000  4000.0000  2000.0000  1000.0000   \n",
       "\n",
       "        PAY_AMT5   PAY_AMT6  BILL_AMT_mean  PAY_AMT_mean  BILL_PAY_diff2  \\\n",
       "0       103.0000 10000.0000     93614.5000    22813.0000      75905.0000   \n",
       "1         0.0000     0.0000       -66.6667       80.0000          0.0000   \n",
       "2     15000.0000 10000.0000     40920.3333    17120.0000      31494.0000   \n",
       "3       939.0000   350.0000       513.5000      472.0000         56.0000   \n",
       "4      3000.0000  9000.0000       307.6667     3200.0000        375.0000   \n",
       "...          ...        ...            ...           ...             ...   \n",
       "11245     0.0000  2606.0000    140198.3333    11586.6000     134422.0000   \n",
       "11246  3002.0000  3003.0000     75164.8333     2322.6000     107089.0000   \n",
       "11247  1000.0000  1400.0000     12072.5000     1038.0000       9171.0000   \n",
       "11248     0.0000     0.0000         0.0000        0.0000          0.0000   \n",
       "11249  2000.0000  2396.0000     17755.5000     2279.2000       8498.0000   \n",
       "\n",
       "       BILL_PAY_diff3  BILL_PAY_diff4  BILL_PAY_diff5  \n",
       "0          83438.0000       5711.0000      91088.0000  \n",
       "1              0.0000       -800.0000          0.0000  \n",
       "2         -19406.0000      11532.0000      31342.0000  \n",
       "3             51.0000        141.0000       -693.0000  \n",
       "4           -250.0000      -4125.0000      -2391.0000  \n",
       "...               ...             ...             ...  \n",
       "11245     108722.0000     111267.0000     147851.0000  \n",
       "11246      45630.0000      35054.0000      21509.0000  \n",
       "11247      12853.0000      11652.0000      11703.0000  \n",
       "11248          0.0000          0.0000          0.0000  \n",
       "11249      14264.0000      16918.0000      14072.0000  \n",
       "\n",
       "[11250 rows x 29 columns]"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_t"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "structural-cursor",
   "metadata": {},
   "source": [
    "#### diferencia entre cada mes para las contiuas"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "reflected-estonia",
   "metadata": {},
   "outputs": [],
   "source": [
    "for period in range(1,6):\n",
    "    df_t[f\"BILL_AMT_diff{period}\"] = df_t[f\"BILL_AMT{period}\"] - df_t[f\"BILL_AMT{period+1}\"]\n",
    "    df_v[f\"BILL_AMT_diff{period}\"] = df_v[f\"BILL_AMT{period}\"] - df_v[f\"BILL_AMT{period+1}\"]\n",
    "for period in range(2,6):    \n",
    "    df_t[f\"PAY_AMT_diff{period}\"] = df_t[f\"PAY_AMT{period}\"] - df_t[f\"PAY_AMT{period+1}\"]\n",
    "    df_v[f\"PAY_AMT_diff{period}\"] = df_v[f\"PAY_AMT{period}\"] - df_v[f\"PAY_AMT{period+1}\"]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "eight-morgan",
   "metadata": {},
   "source": [
    "#### promedio de la diferencia entre cada mes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "paperback-musical",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_t[\"BILL_AMT_diff_mean\"] = df_t[[f\"BILL_AMT_diff{x}\" for x in range(1,6)]].mean(axis=1)\n",
    "df_v[\"BILL_AMT_diff_mean\"] = df_v[[f\"BILL_AMT_diff{x}\" for x in range(1,6)]].mean(axis=1)\n",
    "\n",
    "df_t[\"PAY_AMT_diff_mean\"] = df_t[[f\"PAY_AMT_diff{x}\" for x in range(2,6)]].mean(axis=1)\n",
    "df_v[\"PAY_AMT_diff_mean\"] = df_v[[f\"PAY_AMT_diff{x}\" for x in range(2,6)]].mean(axis=1)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "interior-unknown",
   "metadata": {},
   "source": [
    "#### nueva deuda adquirida en el periodo n\n",
    "nueva_deuda_n = deuda_n - deuna_n-1 + pago_n-1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "furnished-tuition",
   "metadata": {},
   "outputs": [],
   "source": [
    "for period in range(2,6):\n",
    "    df_t[f\"new_debt_{period}\"] = df_t[f\"BILL_AMT{period}\"]-df_t[f\"BILL_AMT{period+1}\"]+df_t[f\"PAY_AMT{period+1}\"]\n",
    "    df_v[f\"new_debt_{period}\"] = df_v[f\"BILL_AMT{period}\"]-df_v[f\"BILL_AMT{period+1}\"]+df_v[f\"PAY_AMT{period+1}\"]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "endangered-stereo",
   "metadata": {},
   "source": [
    "#### promedio de la deuda adquirida"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "incorrect-prime",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_t[\"new_debt_mean\"] = df_t[[f\"new_debt_{x}\" for x in range(2,6)]].mean(axis=1)\n",
    "df_v[\"new_debt_mean\"] = df_v[[f\"new_debt_{x}\" for x in range(2,6)]].mean(axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "coated-island",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CUSTOMER_ID</th>\n",
       "      <th>LIMIT_BAL</th>\n",
       "      <th>SEX</th>\n",
       "      <th>EDUCATION</th>\n",
       "      <th>MARRIAGE</th>\n",
       "      <th>AGE</th>\n",
       "      <th>PAY_2</th>\n",
       "      <th>PAY_3</th>\n",
       "      <th>PAY_4</th>\n",
       "      <th>PAY_5</th>\n",
       "      <th>PAY_6</th>\n",
       "      <th>BILL_AMT1</th>\n",
       "      <th>BILL_AMT2</th>\n",
       "      <th>BILL_AMT3</th>\n",
       "      <th>BILL_AMT4</th>\n",
       "      <th>BILL_AMT5</th>\n",
       "      <th>BILL_AMT6</th>\n",
       "      <th>PAY_AMT1</th>\n",
       "      <th>PAY_AMT2</th>\n",
       "      <th>PAY_AMT3</th>\n",
       "      <th>PAY_AMT4</th>\n",
       "      <th>PAY_AMT5</th>\n",
       "      <th>PAY_AMT6</th>\n",
       "      <th>BILL_AMT_mean</th>\n",
       "      <th>PAY_AMT_mean</th>\n",
       "      <th>BILL_PAY_diff2</th>\n",
       "      <th>BILL_PAY_diff3</th>\n",
       "      <th>BILL_PAY_diff4</th>\n",
       "      <th>BILL_PAY_diff5</th>\n",
       "      <th>BILL_AMT_diff1</th>\n",
       "      <th>BILL_AMT_diff2</th>\n",
       "      <th>BILL_AMT_diff3</th>\n",
       "      <th>BILL_AMT_diff4</th>\n",
       "      <th>BILL_AMT_diff5</th>\n",
       "      <th>PAY_AMT_diff2</th>\n",
       "      <th>PAY_AMT_diff3</th>\n",
       "      <th>PAY_AMT_diff4</th>\n",
       "      <th>PAY_AMT_diff5</th>\n",
       "      <th>BILL_AMT_diff_mean</th>\n",
       "      <th>PAY_AMT_diff_mean</th>\n",
       "      <th>new_debt_2</th>\n",
       "      <th>new_debt_3</th>\n",
       "      <th>new_debt_4</th>\n",
       "      <th>new_debt_5</th>\n",
       "      <th>new_debt_mean</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2770</td>\n",
       "      <td>130000.0000</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>32</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>119312.0000</td>\n",
       "      <td>116259.0000</td>\n",
       "      <td>103438.0000</td>\n",
       "      <td>49319.0000</td>\n",
       "      <td>91191.0000</td>\n",
       "      <td>82168.0000</td>\n",
       "      <td>20021.0000</td>\n",
       "      <td>40354.0000</td>\n",
       "      <td>20000.0000</td>\n",
       "      <td>43608.0000</td>\n",
       "      <td>103.0000</td>\n",
       "      <td>10000.0000</td>\n",
       "      <td>93614.5000</td>\n",
       "      <td>22813.0000</td>\n",
       "      <td>75905.0000</td>\n",
       "      <td>83438.0000</td>\n",
       "      <td>5711.0000</td>\n",
       "      <td>91088.0000</td>\n",
       "      <td>3053.0000</td>\n",
       "      <td>12821.0000</td>\n",
       "      <td>54119.0000</td>\n",
       "      <td>-41872.0000</td>\n",
       "      <td>9023.0000</td>\n",
       "      <td>20354.0000</td>\n",
       "      <td>-23608.0000</td>\n",
       "      <td>43505.0000</td>\n",
       "      <td>-9897.0000</td>\n",
       "      <td>7428.8000</td>\n",
       "      <td>7588.5000</td>\n",
       "      <td>32821.0000</td>\n",
       "      <td>97727.0000</td>\n",
       "      <td>-41769.0000</td>\n",
       "      <td>19023.0000</td>\n",
       "      <td>26950.5000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>21621</td>\n",
       "      <td>10000.0000</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>22</td>\n",
       "      <td>-2</td>\n",
       "      <td>-2</td>\n",
       "      <td>-2</td>\n",
       "      <td>-2</td>\n",
       "      <td>-2</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>-400.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>400.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>-66.6667</td>\n",
       "      <td>80.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>-800.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>400.0000</td>\n",
       "      <td>-400.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>-400.0000</td>\n",
       "      <td>400.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>800.0000</td>\n",
       "      <td>-400.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>100.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>23530</td>\n",
       "      <td>360000.0000</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>46</td>\n",
       "      <td>0</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>58389.0000</td>\n",
       "      <td>42094.0000</td>\n",
       "      <td>10594.0000</td>\n",
       "      <td>31532.0000</td>\n",
       "      <td>46342.0000</td>\n",
       "      <td>56571.0000</td>\n",
       "      <td>20000.0000</td>\n",
       "      <td>10600.0000</td>\n",
       "      <td>30000.0000</td>\n",
       "      <td>20000.0000</td>\n",
       "      <td>15000.0000</td>\n",
       "      <td>10000.0000</td>\n",
       "      <td>40920.3333</td>\n",
       "      <td>17120.0000</td>\n",
       "      <td>31494.0000</td>\n",
       "      <td>-19406.0000</td>\n",
       "      <td>11532.0000</td>\n",
       "      <td>31342.0000</td>\n",
       "      <td>16295.0000</td>\n",
       "      <td>31500.0000</td>\n",
       "      <td>-20938.0000</td>\n",
       "      <td>-14810.0000</td>\n",
       "      <td>-10229.0000</td>\n",
       "      <td>-19400.0000</td>\n",
       "      <td>10000.0000</td>\n",
       "      <td>5000.0000</td>\n",
       "      <td>5000.0000</td>\n",
       "      <td>363.6000</td>\n",
       "      <td>150.0000</td>\n",
       "      <td>61500.0000</td>\n",
       "      <td>-938.0000</td>\n",
       "      <td>190.0000</td>\n",
       "      <td>-229.0000</td>\n",
       "      <td>15130.7500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>27980</td>\n",
       "      <td>80000.0000</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>60</td>\n",
       "      <td>-2</td>\n",
       "      <td>-2</td>\n",
       "      <td>-2</td>\n",
       "      <td>-2</td>\n",
       "      <td>-2</td>\n",
       "      <td>577.0000</td>\n",
       "      <td>494.0000</td>\n",
       "      <td>438.0000</td>\n",
       "      <td>387.0000</td>\n",
       "      <td>246.0000</td>\n",
       "      <td>939.0000</td>\n",
       "      <td>500.0000</td>\n",
       "      <td>438.0000</td>\n",
       "      <td>387.0000</td>\n",
       "      <td>246.0000</td>\n",
       "      <td>939.0000</td>\n",
       "      <td>350.0000</td>\n",
       "      <td>513.5000</td>\n",
       "      <td>472.0000</td>\n",
       "      <td>56.0000</td>\n",
       "      <td>51.0000</td>\n",
       "      <td>141.0000</td>\n",
       "      <td>-693.0000</td>\n",
       "      <td>83.0000</td>\n",
       "      <td>56.0000</td>\n",
       "      <td>51.0000</td>\n",
       "      <td>141.0000</td>\n",
       "      <td>-693.0000</td>\n",
       "      <td>51.0000</td>\n",
       "      <td>141.0000</td>\n",
       "      <td>-693.0000</td>\n",
       "      <td>589.0000</td>\n",
       "      <td>-72.4000</td>\n",
       "      <td>22.0000</td>\n",
       "      <td>443.0000</td>\n",
       "      <td>297.0000</td>\n",
       "      <td>1080.0000</td>\n",
       "      <td>-343.0000</td>\n",
       "      <td>369.2500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>20014</td>\n",
       "      <td>230000.0000</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>28</td>\n",
       "      <td>-1</td>\n",
       "      <td>-1</td>\n",
       "      <td>-2</td>\n",
       "      <td>-1</td>\n",
       "      <td>-1</td>\n",
       "      <td>875.0000</td>\n",
       "      <td>375.0000</td>\n",
       "      <td>-250.0000</td>\n",
       "      <td>-125.0000</td>\n",
       "      <td>609.0000</td>\n",
       "      <td>362.0000</td>\n",
       "      <td>1000.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>4000.0000</td>\n",
       "      <td>3000.0000</td>\n",
       "      <td>9000.0000</td>\n",
       "      <td>307.6667</td>\n",
       "      <td>3200.0000</td>\n",
       "      <td>375.0000</td>\n",
       "      <td>-250.0000</td>\n",
       "      <td>-4125.0000</td>\n",
       "      <td>-2391.0000</td>\n",
       "      <td>500.0000</td>\n",
       "      <td>625.0000</td>\n",
       "      <td>-125.0000</td>\n",
       "      <td>-734.0000</td>\n",
       "      <td>247.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>-4000.0000</td>\n",
       "      <td>1000.0000</td>\n",
       "      <td>-6000.0000</td>\n",
       "      <td>102.6000</td>\n",
       "      <td>-2250.0000</td>\n",
       "      <td>625.0000</td>\n",
       "      <td>3875.0000</td>\n",
       "      <td>2266.0000</td>\n",
       "      <td>9247.0000</td>\n",
       "      <td>4003.2500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11245</th>\n",
       "      <td>27432</td>\n",
       "      <td>150000.0000</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>27</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>138066.0000</td>\n",
       "      <td>140522.0000</td>\n",
       "      <td>138722.0000</td>\n",
       "      <td>130494.0000</td>\n",
       "      <td>147851.0000</td>\n",
       "      <td>145535.0000</td>\n",
       "      <td>5767.0000</td>\n",
       "      <td>6100.0000</td>\n",
       "      <td>30000.0000</td>\n",
       "      <td>19227.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>2606.0000</td>\n",
       "      <td>140198.3333</td>\n",
       "      <td>11586.6000</td>\n",
       "      <td>134422.0000</td>\n",
       "      <td>108722.0000</td>\n",
       "      <td>111267.0000</td>\n",
       "      <td>147851.0000</td>\n",
       "      <td>-2456.0000</td>\n",
       "      <td>1800.0000</td>\n",
       "      <td>8228.0000</td>\n",
       "      <td>-17357.0000</td>\n",
       "      <td>2316.0000</td>\n",
       "      <td>-23900.0000</td>\n",
       "      <td>10773.0000</td>\n",
       "      <td>19227.0000</td>\n",
       "      <td>-2606.0000</td>\n",
       "      <td>-1493.8000</td>\n",
       "      <td>873.5000</td>\n",
       "      <td>31800.0000</td>\n",
       "      <td>27455.0000</td>\n",
       "      <td>-17357.0000</td>\n",
       "      <td>4922.0000</td>\n",
       "      <td>11705.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11246</th>\n",
       "      <td>24219</td>\n",
       "      <td>210000.0000</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>36</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>210463.0000</td>\n",
       "      <td>109132.0000</td>\n",
       "      <td>47182.0000</td>\n",
       "      <td>37067.0000</td>\n",
       "      <td>24511.0000</td>\n",
       "      <td>22634.0000</td>\n",
       "      <td>5187.0000</td>\n",
       "      <td>2043.0000</td>\n",
       "      <td>1552.0000</td>\n",
       "      <td>2013.0000</td>\n",
       "      <td>3002.0000</td>\n",
       "      <td>3003.0000</td>\n",
       "      <td>75164.8333</td>\n",
       "      <td>2322.6000</td>\n",
       "      <td>107089.0000</td>\n",
       "      <td>45630.0000</td>\n",
       "      <td>35054.0000</td>\n",
       "      <td>21509.0000</td>\n",
       "      <td>101331.0000</td>\n",
       "      <td>61950.0000</td>\n",
       "      <td>10115.0000</td>\n",
       "      <td>12556.0000</td>\n",
       "      <td>1877.0000</td>\n",
       "      <td>491.0000</td>\n",
       "      <td>-461.0000</td>\n",
       "      <td>-989.0000</td>\n",
       "      <td>-1.0000</td>\n",
       "      <td>37565.8000</td>\n",
       "      <td>-240.0000</td>\n",
       "      <td>63502.0000</td>\n",
       "      <td>12128.0000</td>\n",
       "      <td>15558.0000</td>\n",
       "      <td>4880.0000</td>\n",
       "      <td>24017.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11247</th>\n",
       "      <td>21973</td>\n",
       "      <td>60000.0000</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>34</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>9928.0000</td>\n",
       "      <td>11261.0000</td>\n",
       "      <td>12853.0000</td>\n",
       "      <td>12352.0000</td>\n",
       "      <td>12703.0000</td>\n",
       "      <td>13338.0000</td>\n",
       "      <td>1500.0000</td>\n",
       "      <td>2090.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>700.0000</td>\n",
       "      <td>1000.0000</td>\n",
       "      <td>1400.0000</td>\n",
       "      <td>12072.5000</td>\n",
       "      <td>1038.0000</td>\n",
       "      <td>9171.0000</td>\n",
       "      <td>12853.0000</td>\n",
       "      <td>11652.0000</td>\n",
       "      <td>11703.0000</td>\n",
       "      <td>-1333.0000</td>\n",
       "      <td>-1592.0000</td>\n",
       "      <td>501.0000</td>\n",
       "      <td>-351.0000</td>\n",
       "      <td>-635.0000</td>\n",
       "      <td>2090.0000</td>\n",
       "      <td>-700.0000</td>\n",
       "      <td>-300.0000</td>\n",
       "      <td>-400.0000</td>\n",
       "      <td>-682.0000</td>\n",
       "      <td>172.5000</td>\n",
       "      <td>-1592.0000</td>\n",
       "      <td>1201.0000</td>\n",
       "      <td>649.0000</td>\n",
       "      <td>765.0000</td>\n",
       "      <td>255.7500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11248</th>\n",
       "      <td>5694</td>\n",
       "      <td>360000.0000</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>34</td>\n",
       "      <td>-2</td>\n",
       "      <td>-2</td>\n",
       "      <td>-2</td>\n",
       "      <td>-2</td>\n",
       "      <td>-2</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11249</th>\n",
       "      <td>21277</td>\n",
       "      <td>50000.0000</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>33</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>26740.0000</td>\n",
       "      <td>12498.0000</td>\n",
       "      <td>16264.0000</td>\n",
       "      <td>17918.0000</td>\n",
       "      <td>16072.0000</td>\n",
       "      <td>17041.0000</td>\n",
       "      <td>2000.0000</td>\n",
       "      <td>4000.0000</td>\n",
       "      <td>2000.0000</td>\n",
       "      <td>1000.0000</td>\n",
       "      <td>2000.0000</td>\n",
       "      <td>2396.0000</td>\n",
       "      <td>17755.5000</td>\n",
       "      <td>2279.2000</td>\n",
       "      <td>8498.0000</td>\n",
       "      <td>14264.0000</td>\n",
       "      <td>16918.0000</td>\n",
       "      <td>14072.0000</td>\n",
       "      <td>14242.0000</td>\n",
       "      <td>-3766.0000</td>\n",
       "      <td>-1654.0000</td>\n",
       "      <td>1846.0000</td>\n",
       "      <td>-969.0000</td>\n",
       "      <td>2000.0000</td>\n",
       "      <td>1000.0000</td>\n",
       "      <td>-1000.0000</td>\n",
       "      <td>-396.0000</td>\n",
       "      <td>1939.8000</td>\n",
       "      <td>401.0000</td>\n",
       "      <td>-1766.0000</td>\n",
       "      <td>-654.0000</td>\n",
       "      <td>3846.0000</td>\n",
       "      <td>1427.0000</td>\n",
       "      <td>713.2500</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>11250 rows × 45 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       CUSTOMER_ID   LIMIT_BAL  SEX  EDUCATION  MARRIAGE  AGE  PAY_2  PAY_3  \\\n",
       "0             2770 130000.0000    2          3         2   32      0      0   \n",
       "1            21621  10000.0000    2          2         2   22     -2     -2   \n",
       "2            23530 360000.0000    2          1         1   46      0     -1   \n",
       "3            27980  80000.0000    2          2         2   60     -2     -2   \n",
       "4            20014 230000.0000    2          2         2   28     -1     -1   \n",
       "...            ...         ...  ...        ...       ...  ...    ...    ...   \n",
       "11245        27432 150000.0000    2          1         2   27      0      0   \n",
       "11246        24219 210000.0000    1          1         2   36      0      0   \n",
       "11247        21973  60000.0000    2          3         1   34      0      0   \n",
       "11248         5694 360000.0000    2          2         2   34     -2     -2   \n",
       "11249        21277  50000.0000    2          2         2   33      0      0   \n",
       "\n",
       "       PAY_4  PAY_5 PAY_6   BILL_AMT1   BILL_AMT2   BILL_AMT3   BILL_AMT4  \\\n",
       "0          0      0     2 119312.0000 116259.0000 103438.0000  49319.0000   \n",
       "1         -2     -2    -2      0.0000      0.0000      0.0000   -400.0000   \n",
       "2          0      0     0  58389.0000  42094.0000  10594.0000  31532.0000   \n",
       "3         -2     -2    -2    577.0000    494.0000    438.0000    387.0000   \n",
       "4         -2     -1    -1    875.0000    375.0000   -250.0000   -125.0000   \n",
       "...      ...    ...   ...         ...         ...         ...         ...   \n",
       "11245      0      0     2 138066.0000 140522.0000 138722.0000 130494.0000   \n",
       "11246      0      0     0 210463.0000 109132.0000  47182.0000  37067.0000   \n",
       "11247      2      0     0   9928.0000  11261.0000  12853.0000  12352.0000   \n",
       "11248     -2     -2    -2      0.0000      0.0000      0.0000      0.0000   \n",
       "11249      0      0     0  26740.0000  12498.0000  16264.0000  17918.0000   \n",
       "\n",
       "        BILL_AMT5   BILL_AMT6   PAY_AMT1   PAY_AMT2   PAY_AMT3   PAY_AMT4  \\\n",
       "0      91191.0000  82168.0000 20021.0000 40354.0000 20000.0000 43608.0000   \n",
       "1          0.0000      0.0000     0.0000     0.0000     0.0000   400.0000   \n",
       "2      46342.0000  56571.0000 20000.0000 10600.0000 30000.0000 20000.0000   \n",
       "3        246.0000    939.0000   500.0000   438.0000   387.0000   246.0000   \n",
       "4        609.0000    362.0000  1000.0000     0.0000     0.0000  4000.0000   \n",
       "...           ...         ...        ...        ...        ...        ...   \n",
       "11245 147851.0000 145535.0000  5767.0000  6100.0000 30000.0000 19227.0000   \n",
       "11246  24511.0000  22634.0000  5187.0000  2043.0000  1552.0000  2013.0000   \n",
       "11247  12703.0000  13338.0000  1500.0000  2090.0000     0.0000   700.0000   \n",
       "11248      0.0000      0.0000     0.0000     0.0000     0.0000     0.0000   \n",
       "11249  16072.0000  17041.0000  2000.0000  4000.0000  2000.0000  1000.0000   \n",
       "\n",
       "        PAY_AMT5   PAY_AMT6  BILL_AMT_mean  PAY_AMT_mean  BILL_PAY_diff2  \\\n",
       "0       103.0000 10000.0000     93614.5000    22813.0000      75905.0000   \n",
       "1         0.0000     0.0000       -66.6667       80.0000          0.0000   \n",
       "2     15000.0000 10000.0000     40920.3333    17120.0000      31494.0000   \n",
       "3       939.0000   350.0000       513.5000      472.0000         56.0000   \n",
       "4      3000.0000  9000.0000       307.6667     3200.0000        375.0000   \n",
       "...          ...        ...            ...           ...             ...   \n",
       "11245     0.0000  2606.0000    140198.3333    11586.6000     134422.0000   \n",
       "11246  3002.0000  3003.0000     75164.8333     2322.6000     107089.0000   \n",
       "11247  1000.0000  1400.0000     12072.5000     1038.0000       9171.0000   \n",
       "11248     0.0000     0.0000         0.0000        0.0000          0.0000   \n",
       "11249  2000.0000  2396.0000     17755.5000     2279.2000       8498.0000   \n",
       "\n",
       "       BILL_PAY_diff3  BILL_PAY_diff4  BILL_PAY_diff5  BILL_AMT_diff1  \\\n",
       "0          83438.0000       5711.0000      91088.0000       3053.0000   \n",
       "1              0.0000       -800.0000          0.0000          0.0000   \n",
       "2         -19406.0000      11532.0000      31342.0000      16295.0000   \n",
       "3             51.0000        141.0000       -693.0000         83.0000   \n",
       "4           -250.0000      -4125.0000      -2391.0000        500.0000   \n",
       "...               ...             ...             ...             ...   \n",
       "11245     108722.0000     111267.0000     147851.0000      -2456.0000   \n",
       "11246      45630.0000      35054.0000      21509.0000     101331.0000   \n",
       "11247      12853.0000      11652.0000      11703.0000      -1333.0000   \n",
       "11248          0.0000          0.0000          0.0000          0.0000   \n",
       "11249      14264.0000      16918.0000      14072.0000      14242.0000   \n",
       "\n",
       "       BILL_AMT_diff2  BILL_AMT_diff3  BILL_AMT_diff4  BILL_AMT_diff5  \\\n",
       "0          12821.0000      54119.0000     -41872.0000       9023.0000   \n",
       "1              0.0000        400.0000       -400.0000          0.0000   \n",
       "2          31500.0000     -20938.0000     -14810.0000     -10229.0000   \n",
       "3             56.0000         51.0000        141.0000       -693.0000   \n",
       "4            625.0000       -125.0000       -734.0000        247.0000   \n",
       "...               ...             ...             ...             ...   \n",
       "11245       1800.0000       8228.0000     -17357.0000       2316.0000   \n",
       "11246      61950.0000      10115.0000      12556.0000       1877.0000   \n",
       "11247      -1592.0000        501.0000       -351.0000       -635.0000   \n",
       "11248          0.0000          0.0000          0.0000          0.0000   \n",
       "11249      -3766.0000      -1654.0000       1846.0000       -969.0000   \n",
       "\n",
       "       PAY_AMT_diff2  PAY_AMT_diff3  PAY_AMT_diff4  PAY_AMT_diff5  \\\n",
       "0         20354.0000    -23608.0000     43505.0000     -9897.0000   \n",
       "1             0.0000      -400.0000       400.0000         0.0000   \n",
       "2        -19400.0000     10000.0000      5000.0000      5000.0000   \n",
       "3            51.0000       141.0000      -693.0000       589.0000   \n",
       "4             0.0000     -4000.0000      1000.0000     -6000.0000   \n",
       "...              ...            ...            ...            ...   \n",
       "11245    -23900.0000     10773.0000     19227.0000     -2606.0000   \n",
       "11246       491.0000      -461.0000      -989.0000        -1.0000   \n",
       "11247      2090.0000      -700.0000      -300.0000      -400.0000   \n",
       "11248         0.0000         0.0000         0.0000         0.0000   \n",
       "11249      2000.0000      1000.0000     -1000.0000      -396.0000   \n",
       "\n",
       "       BILL_AMT_diff_mean  PAY_AMT_diff_mean  new_debt_2  new_debt_3  \\\n",
       "0               7428.8000          7588.5000  32821.0000  97727.0000   \n",
       "1                  0.0000             0.0000      0.0000    800.0000   \n",
       "2                363.6000           150.0000  61500.0000   -938.0000   \n",
       "3                -72.4000            22.0000    443.0000    297.0000   \n",
       "4                102.6000         -2250.0000    625.0000   3875.0000   \n",
       "...                   ...                ...         ...         ...   \n",
       "11245          -1493.8000           873.5000  31800.0000  27455.0000   \n",
       "11246          37565.8000          -240.0000  63502.0000  12128.0000   \n",
       "11247           -682.0000           172.5000  -1592.0000   1201.0000   \n",
       "11248              0.0000             0.0000      0.0000      0.0000   \n",
       "11249           1939.8000           401.0000  -1766.0000   -654.0000   \n",
       "\n",
       "       new_debt_4  new_debt_5  new_debt_mean  \n",
       "0     -41769.0000  19023.0000     26950.5000  \n",
       "1       -400.0000      0.0000       100.0000  \n",
       "2        190.0000   -229.0000     15130.7500  \n",
       "3       1080.0000   -343.0000       369.2500  \n",
       "4       2266.0000   9247.0000      4003.2500  \n",
       "...           ...         ...            ...  \n",
       "11245 -17357.0000   4922.0000     11705.0000  \n",
       "11246  15558.0000   4880.0000     24017.0000  \n",
       "11247    649.0000    765.0000       255.7500  \n",
       "11248      0.0000      0.0000         0.0000  \n",
       "11249   3846.0000   1427.0000       713.2500  \n",
       "\n",
       "[11250 rows x 45 columns]"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_t"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "buried-debut",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'PAY_AMT1'}"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "set(df_t.columns)-set(df_v.columns)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "historic-miniature",
   "metadata": {},
   "source": [
    "### Transformando variables categóricas"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "returning-sydney",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Creating embedding for SEX\n",
      "\n",
      "Epoch 1/25\n",
      "2/2 [==============================] - 9s 10ms/step - loss: 32.8157 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 2/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -72.8745 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 3/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -179.2453 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 4/25\n",
      "2/2 [==============================] - 0s 15ms/step - loss: -290.1782 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 5/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -407.9199 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 6/25\n",
      "2/2 [==============================] - 0s 11ms/step - loss: -524.4916 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 7/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -647.2793 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 8/25\n",
      "2/2 [==============================] - 0s 14ms/step - loss: -788.8578 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 9/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -924.2866 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 10/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -1092.7941 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 11/25\n",
      "2/2 [==============================] - 0s 15ms/step - loss: -1228.4524 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 12/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -1409.4781 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 13/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -1591.2008 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 14/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -1749.9771 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 15/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -1930.4362 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 16/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -2120.2562 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 17/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -2370.7115 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 18/25\n",
      "2/2 [==============================] - 0s 15ms/step - loss: -2583.7669 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 19/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -2789.6351 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 20/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -3003.1703 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 21/25\n",
      "2/2 [==============================] - 0s 14ms/step - loss: -3284.8678 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 22/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -3577.9013 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 23/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -3831.3644 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 24/25\n",
      "2/2 [==============================] - 0s 14ms/step - loss: -4124.3813 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 25/25\n",
      "2/2 [==============================] - 0s 14ms/step - loss: -4447.3418 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Creating embedding for EDUCATION\n",
      "\n",
      "Epoch 1/25\n",
      "2/2 [==============================] - 1s 10ms/step - loss: 19.2877 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 2/25\n",
      "2/2 [==============================] - 0s 14ms/step - loss: -57.6252 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 3/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -132.6333 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 4/25\n",
      "2/2 [==============================] - 0s 11ms/step - loss: -206.8511 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 5/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -280.7264 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 6/25\n",
      "2/2 [==============================] - 0s 11ms/step - loss: -357.9304 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 7/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -439.5857 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 8/25\n",
      "2/2 [==============================] - 0s 11ms/step - loss: -515.2669 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 9/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -599.4220 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 10/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -678.6448 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 11/25\n",
      "2/2 [==============================] - 0s 15ms/step - loss: -783.7593 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 12/25\n",
      "2/2 [==============================] - 0s 15ms/step - loss: -873.7323 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 13/25\n",
      "2/2 [==============================] - 0s 15ms/step - loss: -985.2991 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 14/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -1070.5517 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 15/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -1183.3355 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 16/25\n",
      "2/2 [==============================] - 0s 14ms/step - loss: -1306.0103 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 17/25\n",
      "2/2 [==============================] - 0s 15ms/step - loss: -1422.9022 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 18/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -1500.9692 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 19/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -1640.7740 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 20/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -1800.7689 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 21/25\n",
      "2/2 [==============================] - 0s 15ms/step - loss: -1935.4544 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 22/25\n",
      "2/2 [==============================] - 0s 14ms/step - loss: -2076.4380 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 23/25\n",
      "2/2 [==============================] - 0s 11ms/step - loss: -2204.2375 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 24/25\n",
      "2/2 [==============================] - 0s 15ms/step - loss: -2365.3582 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 25/25\n",
      "2/2 [==============================] - 0s 14ms/step - loss: -2529.6311 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Creating embedding for MARRIAGE\n",
      "\n",
      "Epoch 1/25\n",
      "2/2 [==============================] - 1s 12ms/step - loss: 80.8284 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 2/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -25.5521 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 3/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -130.0071 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 4/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -229.1652 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 5/25\n",
      "2/2 [==============================] - 0s 14ms/step - loss: -327.2545 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 6/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -435.2205 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 7/25\n",
      "2/2 [==============================] - 0s 17ms/step - loss: -535.9750 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 8/25\n",
      "2/2 [==============================] - 0s 14ms/step - loss: -646.1402 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 9/25\n",
      "2/2 [==============================] - 0s 14ms/step - loss: -754.6910 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 10/25\n",
      "2/2 [==============================] - 0s 14ms/step - loss: -874.8081 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 11/25\n",
      "2/2 [==============================] - 0s 11ms/step - loss: -973.2832 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 12/25\n",
      "2/2 [==============================] - 0s 14ms/step - loss: -1093.4737 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 13/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -1193.8946 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 14/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -1350.1271 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 15/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -1508.0712 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 16/25\n",
      "2/2 [==============================] - 0s 14ms/step - loss: -1608.3809 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 17/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -1775.3353 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 18/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -1937.5989 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 19/25\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2/2 [==============================] - 0s 14ms/step - loss: -2069.1166 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 20/25\n",
      "2/2 [==============================] - 0s 11ms/step - loss: -2268.2703 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 21/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -2430.7853 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 22/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -2565.7418 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 23/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -2821.1527 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 24/25\n",
      "2/2 [==============================] - 0s 14ms/step - loss: -2994.0836 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 25/25\n",
      "2/2 [==============================] - 0s 14ms/step - loss: -3263.1300 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Creating embedding for AGE\n",
      "\n",
      "Epoch 1/25\n",
      "2/2 [==============================] - 1s 10ms/step - loss: 56.0900 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 2/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -44.1145 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 3/25\n",
      "2/2 [==============================] - 0s 16ms/step - loss: -141.0774 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 4/25\n",
      "2/2 [==============================] - 0s 14ms/step - loss: -233.2936 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 5/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -326.7012 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 6/25\n",
      "2/2 [==============================] - 0s 14ms/step - loss: -424.4515 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 7/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -522.7244 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 8/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -617.7397 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 9/25\n",
      "2/2 [==============================] - 0s 16ms/step - loss: -717.3905 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 10/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -822.2323 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 11/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -927.3667 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 12/25\n",
      "2/2 [==============================] - 0s 16ms/step - loss: -1050.6438 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 13/25\n",
      "2/2 [==============================] - 0s 15ms/step - loss: -1175.1195 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 14/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -1308.7019 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 15/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -1439.1382 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 16/25\n",
      "2/2 [==============================] - 0s 11ms/step - loss: -1572.4229 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 17/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -1734.7094 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 18/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -1884.1433 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 19/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -2093.0375 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 20/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -2238.9457 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 21/25\n",
      "2/2 [==============================] - 0s 14ms/step - loss: -2382.2063 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 22/25\n",
      "2/2 [==============================] - 0s 11ms/step - loss: -2584.9548 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 23/25\n",
      "2/2 [==============================] - 0s 15ms/step - loss: -2789.3388 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 24/25\n",
      "2/2 [==============================] - 0s 14ms/step - loss: -3019.9709 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 25/25\n",
      "2/2 [==============================] - 0s 15ms/step - loss: -3190.6891 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Creating embedding for PAY_2\n",
      "\n",
      "Epoch 1/25\n",
      "2/2 [==============================] - 1s 10ms/step - loss: -14.0651 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 2/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -127.8355 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 3/25\n",
      "2/2 [==============================] - 0s 14ms/step - loss: -237.5692 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 4/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -349.0285 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 5/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -464.8440 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 6/25\n",
      "2/2 [==============================] - 0s 14ms/step - loss: -569.7070 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 7/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -689.7198 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 8/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -823.3368 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 9/25\n",
      "2/2 [==============================] - 0s 11ms/step - loss: -929.1786 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 10/25\n",
      "2/2 [==============================] - 0s 15ms/step - loss: -1074.6825 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 11/25\n",
      "2/2 [==============================] - 0s 14ms/step - loss: -1209.3281 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 12/25\n",
      "2/2 [==============================] - 0s 15ms/step - loss: -1355.2230 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 13/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -1512.7502 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 14/25\n",
      "2/2 [==============================] - 0s 11ms/step - loss: -1706.7339 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 15/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -1883.2665 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 16/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -2063.6333 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 17/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -2253.9069 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 18/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -2442.4566 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 19/25\n",
      "2/2 [==============================] - 0s 14ms/step - loss: -2625.3018 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 20/25\n",
      "2/2 [==============================] - 0s 14ms/step - loss: -2878.8125 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 21/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -3068.4318 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 22/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -3330.1154 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 23/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -3600.2414 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 24/25\n",
      "2/2 [==============================] - 0s 11ms/step - loss: -3948.5044 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 25/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -4154.3149 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Creating embedding for PAY_3\n",
      "\n",
      "Epoch 1/25\n",
      "2/2 [==============================] - 1s 10ms/step - loss: -123.2602 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 2/25\n",
      "2/2 [==============================] - 0s 14ms/step - loss: -262.6560 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 3/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -401.5154 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 4/25\n",
      "2/2 [==============================] - 0s 14ms/step - loss: -528.3120 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 5/25\n",
      "2/2 [==============================] - 0s 14ms/step - loss: -668.4793 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 6/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -797.7469 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 7/25\n",
      "2/2 [==============================] - 0s 11ms/step - loss: -927.3953 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 8/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -1063.4622 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 9/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -1227.0280 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 10/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -1356.3648 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 11/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -1495.0459 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 12/25\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2/2 [==============================] - 0s 14ms/step - loss: -1678.7273 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 13/25\n",
      "2/2 [==============================] - 0s 11ms/step - loss: -1836.3516 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 14/25\n",
      "2/2 [==============================] - 0s 14ms/step - loss: -2017.3790 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 15/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -2202.5181 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 16/25\n",
      "2/2 [==============================] - 0s 11ms/step - loss: -2337.4684 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 17/25\n",
      "2/2 [==============================] - 0s 15ms/step - loss: -2561.5140 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 18/25\n",
      "2/2 [==============================] - 0s 16ms/step - loss: -2734.5374 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 19/25\n",
      "2/2 [==============================] - 0s 16ms/step - loss: -2954.0424 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 20/25\n",
      "2/2 [==============================] - 0s 14ms/step - loss: -3221.8962 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 21/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -3385.9198 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 22/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -3673.7503 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 23/25\n",
      "2/2 [==============================] - 0s 14ms/step - loss: -3892.1223 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 24/25\n",
      "2/2 [==============================] - 0s 15ms/step - loss: -4158.8824 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 25/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -4474.1094 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Creating embedding for PAY_4\n",
      "\n",
      "Epoch 1/25\n",
      "2/2 [==============================] - 1s 10ms/step - loss: -36.1320 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 2/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -119.3967 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 3/25\n",
      "2/2 [==============================] - 0s 15ms/step - loss: -202.7118 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 4/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -295.7045 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 5/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -389.4862 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 6/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -483.1330 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 7/25\n",
      "2/2 [==============================] - 0s 14ms/step - loss: -585.7498 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 8/25\n",
      "2/2 [==============================] - 0s 17ms/step - loss: -689.9462 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 9/25\n",
      "2/2 [==============================] - 0s 16ms/step - loss: -806.7188 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 10/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -924.6441 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 11/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -1033.1050 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 12/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -1133.6057 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 13/25\n",
      "2/2 [==============================] - 0s 14ms/step - loss: -1263.6707 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 14/25\n",
      "2/2 [==============================] - 0s 14ms/step - loss: -1379.4222 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 15/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -1557.2163 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 16/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -1669.4768 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 17/25\n",
      "2/2 [==============================] - 0s 14ms/step - loss: -1864.2535 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 18/25\n",
      "2/2 [==============================] - 0s 14ms/step - loss: -2014.6602 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 19/25\n",
      "2/2 [==============================] - 0s 17ms/step - loss: -2197.5133 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 20/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -2375.1817 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 21/25\n",
      "2/2 [==============================] - 0s 14ms/step - loss: -2547.1951 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 22/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -2723.0979 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 23/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -2932.4578 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 24/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -3142.8617 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 25/25\n",
      "2/2 [==============================] - 0s 14ms/step - loss: -3370.2684 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Creating embedding for PAY_5\n",
      "\n",
      "Epoch 1/25\n",
      "2/2 [==============================] - 1s 11ms/step - loss: -51.0634 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 2/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -123.0021 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 3/25\n",
      "2/2 [==============================] - 0s 11ms/step - loss: -197.0099 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 4/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -276.6636 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 5/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -352.1689 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 6/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -437.9442 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 7/25\n",
      "2/2 [==============================] - 0s 14ms/step - loss: -524.7651 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 8/25\n",
      "2/2 [==============================] - 0s 14ms/step - loss: -605.7379 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 9/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -710.4677 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 10/25\n",
      "2/2 [==============================] - 0s 11ms/step - loss: -802.2796 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 11/25\n",
      "2/2 [==============================] - 0s 14ms/step - loss: -908.8430 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 12/25\n",
      "2/2 [==============================] - 0s 16ms/step - loss: -1014.6323 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 13/25\n",
      "2/2 [==============================] - 0s 14ms/step - loss: -1152.3529 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 14/25\n",
      "2/2 [==============================] - 0s 14ms/step - loss: -1279.0365 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 15/25\n",
      "2/2 [==============================] - 0s 11ms/step - loss: -1400.1445 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 16/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -1539.6282 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 17/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -1684.2764 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 18/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -1856.3869 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 19/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -2002.9655 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 20/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -2219.1296 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 21/25\n",
      "2/2 [==============================] - 0s 14ms/step - loss: -2343.7124 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 22/25\n",
      "2/2 [==============================] - 0s 14ms/step - loss: -2564.2931 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 23/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -2770.6651 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 24/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -2992.3750 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 25/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -3218.3094 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Creating embedding for PAY_6\n",
      "\n",
      "Epoch 1/25\n",
      "2/2 [==============================] - 1s 11ms/step - loss: -11.1040 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 2/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -83.4904 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 3/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -152.6603 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 4/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -223.6630 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 5/25\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2/2 [==============================] - 0s 14ms/step - loss: -294.3474 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 6/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -372.8611 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 7/25\n",
      "2/2 [==============================] - 0s 11ms/step - loss: -446.8812 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 8/25\n",
      "2/2 [==============================] - 0s 16ms/step - loss: -535.1311 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 9/25\n",
      "2/2 [==============================] - 0s 14ms/step - loss: -617.2361 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 10/25\n",
      "2/2 [==============================] - 0s 16ms/step - loss: -709.8083 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 11/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -812.6222 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 12/25\n",
      "2/2 [==============================] - 0s 11ms/step - loss: -890.6955 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 13/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -998.5186 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 14/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -1106.8032 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 15/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -1217.9160 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 16/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -1324.1698 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 17/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -1449.9019 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 18/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -1570.7870 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 19/25\n",
      "2/2 [==============================] - 0s 12ms/step - loss: -1704.7772 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 20/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -1847.9329 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 21/25\n",
      "2/2 [==============================] - 0s 14ms/step - loss: -2005.3133 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 22/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -2180.5895 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 23/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -2312.1495 - accuracy: 5.9259e-05 - roc: 0.5000\n",
      "Epoch 24/25\n",
      "2/2 [==============================] - 0s 11ms/step - loss: -2504.0693 - accuracy: 1.1481e-04 - roc: 0.5000\n",
      "Epoch 25/25\n",
      "2/2 [==============================] - 0s 13ms/step - loss: -2697.9374 - accuracy: 5.9259e-05 - roc: 0.5000\n"
     ]
    }
   ],
   "source": [
    "for v in ls_disc:\n",
    "    df_t, df_v, embedding = make_embedding(df_t, df_v, v, target)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "hungarian-bryan",
   "metadata": {},
   "source": [
    "## Modelado"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "analyzed-evans",
   "metadata": {},
   "source": [
    "### Separación de sets"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "broke-collectible",
   "metadata": {},
   "outputs": [],
   "source": [
    "X = df_t.drop(columns='PAY_AMT1')\n",
    "y = df_t[target]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "juvenile-madrid",
   "metadata": {},
   "source": [
    "### Escalado"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "future-training",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CUSTOMER_ID</th>\n",
       "      <th>LIMIT_BAL</th>\n",
       "      <th>BILL_AMT1</th>\n",
       "      <th>BILL_AMT2</th>\n",
       "      <th>BILL_AMT3</th>\n",
       "      <th>BILL_AMT4</th>\n",
       "      <th>BILL_AMT5</th>\n",
       "      <th>BILL_AMT6</th>\n",
       "      <th>PAY_AMT2</th>\n",
       "      <th>PAY_AMT3</th>\n",
       "      <th>PAY_AMT4</th>\n",
       "      <th>PAY_AMT5</th>\n",
       "      <th>PAY_AMT6</th>\n",
       "      <th>BILL_AMT_mean</th>\n",
       "      <th>PAY_AMT_mean</th>\n",
       "      <th>BILL_PAY_diff2</th>\n",
       "      <th>BILL_PAY_diff3</th>\n",
       "      <th>BILL_PAY_diff4</th>\n",
       "      <th>BILL_PAY_diff5</th>\n",
       "      <th>BILL_AMT_diff1</th>\n",
       "      <th>BILL_AMT_diff2</th>\n",
       "      <th>BILL_AMT_diff3</th>\n",
       "      <th>BILL_AMT_diff4</th>\n",
       "      <th>BILL_AMT_diff5</th>\n",
       "      <th>PAY_AMT_diff2</th>\n",
       "      <th>...</th>\n",
       "      <th>SEX_embedding_2</th>\n",
       "      <th>EDUCATION_embedding_0</th>\n",
       "      <th>EDUCATION_embedding_1</th>\n",
       "      <th>EDUCATION_embedding_2</th>\n",
       "      <th>MARRIAGE_embedding_0</th>\n",
       "      <th>MARRIAGE_embedding_1</th>\n",
       "      <th>MARRIAGE_embedding_2</th>\n",
       "      <th>AGE_embedding_0</th>\n",
       "      <th>AGE_embedding_1</th>\n",
       "      <th>AGE_embedding_2</th>\n",
       "      <th>PAY_2_embedding_0</th>\n",
       "      <th>PAY_2_embedding_1</th>\n",
       "      <th>PAY_2_embedding_2</th>\n",
       "      <th>PAY_3_embedding_0</th>\n",
       "      <th>PAY_3_embedding_1</th>\n",
       "      <th>PAY_3_embedding_2</th>\n",
       "      <th>PAY_4_embedding_0</th>\n",
       "      <th>PAY_4_embedding_1</th>\n",
       "      <th>PAY_4_embedding_2</th>\n",
       "      <th>PAY_5_embedding_0</th>\n",
       "      <th>PAY_5_embedding_1</th>\n",
       "      <th>PAY_5_embedding_2</th>\n",
       "      <th>PAY_6_embedding_0</th>\n",
       "      <th>PAY_6_embedding_1</th>\n",
       "      <th>PAY_6_embedding_2</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.0923</td>\n",
       "      <td>0.1519</td>\n",
       "      <td>0.3568</td>\n",
       "      <td>0.2286</td>\n",
       "      <td>0.3541</td>\n",
       "      <td>0.2746</td>\n",
       "      <td>0.1724</td>\n",
       "      <td>0.4942</td>\n",
       "      <td>0.0332</td>\n",
       "      <td>0.0225</td>\n",
       "      <td>0.0702</td>\n",
       "      <td>0.0002</td>\n",
       "      <td>0.0190</td>\n",
       "      <td>0.2308</td>\n",
       "      <td>0.0395</td>\n",
       "      <td>0.6325</td>\n",
       "      <td>0.6592</td>\n",
       "      <td>0.5426</td>\n",
       "      <td>0.3715</td>\n",
       "      <td>0.4621</td>\n",
       "      <td>0.4740</td>\n",
       "      <td>0.6010</td>\n",
       "      <td>0.4841</td>\n",
       "      <td>0.4371</td>\n",
       "      <td>0.5130</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.5215</td>\n",
       "      <td>0.3509</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.4817</td>\n",
       "      <td>0.7091</td>\n",
       "      <td>0.5514</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.7488</td>\n",
       "      <td>0.7400</td>\n",
       "      <td>0.8861</td>\n",
       "      <td>0.1238</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.5189</td>\n",
       "      <td>0.8165</td>\n",
       "      <td>0.9520</td>\n",
       "      <td>0.0962</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>0.2968</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>0.7680</td>\n",
       "      <td>0.6170</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.8594</td>\n",
       "      <td>0.1392</td>\n",
       "      <td>0.2219</td>\n",
       "      <td>0.1060</td>\n",
       "      <td>0.2363</td>\n",
       "      <td>0.2344</td>\n",
       "      <td>0.0900</td>\n",
       "      <td>0.4182</td>\n",
       "      <td>0.0013</td>\n",
       "      <td>0.0022</td>\n",
       "      <td>0.0024</td>\n",
       "      <td>0.0011</td>\n",
       "      <td>0.0133</td>\n",
       "      <td>0.1125</td>\n",
       "      <td>0.0043</td>\n",
       "      <td>0.5979</td>\n",
       "      <td>0.6109</td>\n",
       "      <td>0.5506</td>\n",
       "      <td>0.3070</td>\n",
       "      <td>0.4576</td>\n",
       "      <td>0.4603</td>\n",
       "      <td>0.5333</td>\n",
       "      <td>0.5284</td>\n",
       "      <td>0.4267</td>\n",
       "      <td>0.4858</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.1970</td>\n",
       "      <td>0.5704</td>\n",
       "      <td>0.2745</td>\n",
       "      <td>0.5215</td>\n",
       "      <td>0.3509</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.4817</td>\n",
       "      <td>0.7091</td>\n",
       "      <td>0.5514</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.7488</td>\n",
       "      <td>0.7400</td>\n",
       "      <td>0.8861</td>\n",
       "      <td>0.1238</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.5189</td>\n",
       "      <td>0.8165</td>\n",
       "      <td>0.9520</td>\n",
       "      <td>0.0962</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>0.2968</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>0.7680</td>\n",
       "      <td>0.6170</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.6555</td>\n",
       "      <td>0.1519</td>\n",
       "      <td>0.3734</td>\n",
       "      <td>0.2467</td>\n",
       "      <td>0.3454</td>\n",
       "      <td>0.2887</td>\n",
       "      <td>0.1395</td>\n",
       "      <td>0.4692</td>\n",
       "      <td>0.0038</td>\n",
       "      <td>0.0056</td>\n",
       "      <td>0.0081</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0114</td>\n",
       "      <td>0.2261</td>\n",
       "      <td>0.0071</td>\n",
       "      <td>0.6611</td>\n",
       "      <td>0.6652</td>\n",
       "      <td>0.5828</td>\n",
       "      <td>0.3459</td>\n",
       "      <td>0.4599</td>\n",
       "      <td>0.4963</td>\n",
       "      <td>0.5790</td>\n",
       "      <td>0.5280</td>\n",
       "      <td>0.4270</td>\n",
       "      <td>0.4858</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>0.4113</td>\n",
       "      <td>0.3483</td>\n",
       "      <td>0.5215</td>\n",
       "      <td>0.3509</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.4817</td>\n",
       "      <td>0.7091</td>\n",
       "      <td>0.5514</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.7488</td>\n",
       "      <td>0.7400</td>\n",
       "      <td>0.8861</td>\n",
       "      <td>0.1238</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.5189</td>\n",
       "      <td>0.8165</td>\n",
       "      <td>0.9520</td>\n",
       "      <td>0.0962</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>0.2968</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>0.7680</td>\n",
       "      <td>0.6170</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.3160</td>\n",
       "      <td>0.1899</td>\n",
       "      <td>0.2411</td>\n",
       "      <td>0.1154</td>\n",
       "      <td>0.2273</td>\n",
       "      <td>0.2202</td>\n",
       "      <td>0.0764</td>\n",
       "      <td>0.4030</td>\n",
       "      <td>0.0009</td>\n",
       "      <td>0.0003</td>\n",
       "      <td>0.0008</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0019</td>\n",
       "      <td>0.1073</td>\n",
       "      <td>0.0010</td>\n",
       "      <td>0.6025</td>\n",
       "      <td>0.6074</td>\n",
       "      <td>0.5423</td>\n",
       "      <td>0.2968</td>\n",
       "      <td>0.4658</td>\n",
       "      <td>0.4753</td>\n",
       "      <td>0.5390</td>\n",
       "      <td>0.5293</td>\n",
       "      <td>0.4279</td>\n",
       "      <td>0.4873</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.1970</td>\n",
       "      <td>0.5704</td>\n",
       "      <td>0.2745</td>\n",
       "      <td>0.0277</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.1324</td>\n",
       "      <td>0.4817</td>\n",
       "      <td>0.7091</td>\n",
       "      <td>0.5514</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.7488</td>\n",
       "      <td>0.7400</td>\n",
       "      <td>0.8861</td>\n",
       "      <td>0.1238</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.5189</td>\n",
       "      <td>0.8165</td>\n",
       "      <td>0.9520</td>\n",
       "      <td>0.0962</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>0.2968</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>0.7680</td>\n",
       "      <td>0.6170</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.8829</td>\n",
       "      <td>0.1139</td>\n",
       "      <td>0.3291</td>\n",
       "      <td>0.2062</td>\n",
       "      <td>0.3478</td>\n",
       "      <td>0.3355</td>\n",
       "      <td>0.1845</td>\n",
       "      <td>0.5128</td>\n",
       "      <td>0.0039</td>\n",
       "      <td>0.0044</td>\n",
       "      <td>0.0127</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0146</td>\n",
       "      <td>0.2387</td>\n",
       "      <td>0.0084</td>\n",
       "      <td>0.6423</td>\n",
       "      <td>0.6672</td>\n",
       "      <td>0.6106</td>\n",
       "      <td>0.3810</td>\n",
       "      <td>0.4587</td>\n",
       "      <td>0.4597</td>\n",
       "      <td>0.5348</td>\n",
       "      <td>0.5253</td>\n",
       "      <td>0.4304</td>\n",
       "      <td>0.4874</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>0.4113</td>\n",
       "      <td>0.3483</td>\n",
       "      <td>0.0277</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.1324</td>\n",
       "      <td>0.4817</td>\n",
       "      <td>0.7091</td>\n",
       "      <td>0.5514</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.7488</td>\n",
       "      <td>0.7400</td>\n",
       "      <td>0.8861</td>\n",
       "      <td>0.1238</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.5189</td>\n",
       "      <td>0.8165</td>\n",
       "      <td>0.9520</td>\n",
       "      <td>0.0962</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>0.2968</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>0.7680</td>\n",
       "      <td>0.6170</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11245</th>\n",
       "      <td>0.2400</td>\n",
       "      <td>0.2152</td>\n",
       "      <td>0.2047</td>\n",
       "      <td>0.0887</td>\n",
       "      <td>0.2169</td>\n",
       "      <td>0.2159</td>\n",
       "      <td>0.0721</td>\n",
       "      <td>0.4008</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0901</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.5908</td>\n",
       "      <td>0.6022</td>\n",
       "      <td>0.5399</td>\n",
       "      <td>0.2934</td>\n",
       "      <td>0.4586</td>\n",
       "      <td>0.4605</td>\n",
       "      <td>0.5338</td>\n",
       "      <td>0.5296</td>\n",
       "      <td>0.4255</td>\n",
       "      <td>0.4864</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>0.4113</td>\n",
       "      <td>0.3483</td>\n",
       "      <td>0.5215</td>\n",
       "      <td>0.3509</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.9270</td>\n",
       "      <td>0.5117</td>\n",
       "      <td>0.8890</td>\n",
       "      <td>0.4530</td>\n",
       "      <td>0.4182</td>\n",
       "      <td>0.9688</td>\n",
       "      <td>0.6429</td>\n",
       "      <td>0.8311</td>\n",
       "      <td>0.1234</td>\n",
       "      <td>0.7212</td>\n",
       "      <td>0.4165</td>\n",
       "      <td>0.1478</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>0.9322</td>\n",
       "      <td>0.1160</td>\n",
       "      <td>0.6487</td>\n",
       "      <td>0.5200</td>\n",
       "      <td>0.8763</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11246</th>\n",
       "      <td>0.5315</td>\n",
       "      <td>0.0380</td>\n",
       "      <td>0.2047</td>\n",
       "      <td>0.0887</td>\n",
       "      <td>0.2169</td>\n",
       "      <td>0.2159</td>\n",
       "      <td>0.0721</td>\n",
       "      <td>0.4008</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0901</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.5908</td>\n",
       "      <td>0.6022</td>\n",
       "      <td>0.5399</td>\n",
       "      <td>0.2934</td>\n",
       "      <td>0.4586</td>\n",
       "      <td>0.4605</td>\n",
       "      <td>0.5338</td>\n",
       "      <td>0.5296</td>\n",
       "      <td>0.4255</td>\n",
       "      <td>0.4864</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0277</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.1324</td>\n",
       "      <td>0.7391</td>\n",
       "      <td>0.6137</td>\n",
       "      <td>0.7160</td>\n",
       "      <td>0.4530</td>\n",
       "      <td>0.4182</td>\n",
       "      <td>0.9688</td>\n",
       "      <td>0.6429</td>\n",
       "      <td>0.8311</td>\n",
       "      <td>0.1234</td>\n",
       "      <td>0.7212</td>\n",
       "      <td>0.4165</td>\n",
       "      <td>0.1478</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>0.9322</td>\n",
       "      <td>0.1160</td>\n",
       "      <td>0.6487</td>\n",
       "      <td>0.5200</td>\n",
       "      <td>0.8763</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11247</th>\n",
       "      <td>0.2693</td>\n",
       "      <td>0.0253</td>\n",
       "      <td>0.2047</td>\n",
       "      <td>0.0887</td>\n",
       "      <td>0.2169</td>\n",
       "      <td>0.2158</td>\n",
       "      <td>0.0721</td>\n",
       "      <td>0.4007</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0901</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.5908</td>\n",
       "      <td>0.6022</td>\n",
       "      <td>0.5399</td>\n",
       "      <td>0.2934</td>\n",
       "      <td>0.4586</td>\n",
       "      <td>0.4605</td>\n",
       "      <td>0.5338</td>\n",
       "      <td>0.5296</td>\n",
       "      <td>0.4255</td>\n",
       "      <td>0.4864</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0277</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.1324</td>\n",
       "      <td>0.7391</td>\n",
       "      <td>0.6137</td>\n",
       "      <td>0.7160</td>\n",
       "      <td>0.4530</td>\n",
       "      <td>0.4182</td>\n",
       "      <td>0.9688</td>\n",
       "      <td>0.6429</td>\n",
       "      <td>0.8311</td>\n",
       "      <td>0.1234</td>\n",
       "      <td>0.7212</td>\n",
       "      <td>0.4165</td>\n",
       "      <td>0.1478</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>0.9322</td>\n",
       "      <td>0.1160</td>\n",
       "      <td>0.6487</td>\n",
       "      <td>0.5200</td>\n",
       "      <td>0.8763</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11248</th>\n",
       "      <td>0.0707</td>\n",
       "      <td>0.4304</td>\n",
       "      <td>0.2047</td>\n",
       "      <td>0.0887</td>\n",
       "      <td>0.2169</td>\n",
       "      <td>0.2159</td>\n",
       "      <td>0.0721</td>\n",
       "      <td>0.4008</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0901</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.5908</td>\n",
       "      <td>0.6022</td>\n",
       "      <td>0.5399</td>\n",
       "      <td>0.2934</td>\n",
       "      <td>0.4586</td>\n",
       "      <td>0.4605</td>\n",
       "      <td>0.5338</td>\n",
       "      <td>0.5296</td>\n",
       "      <td>0.4255</td>\n",
       "      <td>0.4864</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>0.4113</td>\n",
       "      <td>0.3483</td>\n",
       "      <td>0.0277</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.1324</td>\n",
       "      <td>0.5608</td>\n",
       "      <td>0.6882</td>\n",
       "      <td>0.6290</td>\n",
       "      <td>0.4530</td>\n",
       "      <td>0.4182</td>\n",
       "      <td>0.9688</td>\n",
       "      <td>0.6429</td>\n",
       "      <td>0.8311</td>\n",
       "      <td>0.1234</td>\n",
       "      <td>0.7212</td>\n",
       "      <td>0.4165</td>\n",
       "      <td>0.1478</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>0.9322</td>\n",
       "      <td>0.1160</td>\n",
       "      <td>0.6487</td>\n",
       "      <td>0.5200</td>\n",
       "      <td>0.8763</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11249</th>\n",
       "      <td>0.6053</td>\n",
       "      <td>0.1139</td>\n",
       "      <td>0.2961</td>\n",
       "      <td>0.1969</td>\n",
       "      <td>0.3345</td>\n",
       "      <td>0.3338</td>\n",
       "      <td>0.1881</td>\n",
       "      <td>0.5192</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0112</td>\n",
       "      <td>0.0161</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.2297</td>\n",
       "      <td>0.0069</td>\n",
       "      <td>0.6407</td>\n",
       "      <td>0.6561</td>\n",
       "      <td>0.6078</td>\n",
       "      <td>0.3838</td>\n",
       "      <td>0.4381</td>\n",
       "      <td>0.4621</td>\n",
       "      <td>0.5244</td>\n",
       "      <td>0.5204</td>\n",
       "      <td>0.4275</td>\n",
       "      <td>0.4733</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>0.1970</td>\n",
       "      <td>0.5704</td>\n",
       "      <td>0.2745</td>\n",
       "      <td>0.5215</td>\n",
       "      <td>0.3509</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.1017</td>\n",
       "      <td>0.5664</td>\n",
       "      <td>0.3485</td>\n",
       "      <td>0.2125</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>0.4304</td>\n",
       "      <td>0.6429</td>\n",
       "      <td>0.8311</td>\n",
       "      <td>0.1234</td>\n",
       "      <td>0.4969</td>\n",
       "      <td>0.9032</td>\n",
       "      <td>0.9818</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>0.9322</td>\n",
       "      <td>0.1160</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.4638</td>\n",
       "      <td>1.0000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>11250 rows × 62 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       CUSTOMER_ID  LIMIT_BAL  BILL_AMT1  BILL_AMT2  BILL_AMT3  BILL_AMT4  \\\n",
       "0           0.0923     0.1519     0.3568     0.2286     0.3541     0.2746   \n",
       "1           0.8594     0.1392     0.2219     0.1060     0.2363     0.2344   \n",
       "2           0.6555     0.1519     0.3734     0.2467     0.3454     0.2887   \n",
       "3           0.3160     0.1899     0.2411     0.1154     0.2273     0.2202   \n",
       "4           0.8829     0.1139     0.3291     0.2062     0.3478     0.3355   \n",
       "...            ...        ...        ...        ...        ...        ...   \n",
       "11245       0.2400     0.2152     0.2047     0.0887     0.2169     0.2159   \n",
       "11246       0.5315     0.0380     0.2047     0.0887     0.2169     0.2159   \n",
       "11247       0.2693     0.0253     0.2047     0.0887     0.2169     0.2158   \n",
       "11248       0.0707     0.4304     0.2047     0.0887     0.2169     0.2159   \n",
       "11249       0.6053     0.1139     0.2961     0.1969     0.3345     0.3338   \n",
       "\n",
       "       BILL_AMT5  BILL_AMT6  PAY_AMT2  PAY_AMT3  PAY_AMT4  PAY_AMT5  PAY_AMT6  \\\n",
       "0         0.1724     0.4942    0.0332    0.0225    0.0702    0.0002    0.0190   \n",
       "1         0.0900     0.4182    0.0013    0.0022    0.0024    0.0011    0.0133   \n",
       "2         0.1395     0.4692    0.0038    0.0056    0.0081    0.0000    0.0114   \n",
       "3         0.0764     0.4030    0.0009    0.0003    0.0008    0.0000    0.0019   \n",
       "4         0.1845     0.5128    0.0039    0.0044    0.0127    0.0000    0.0146   \n",
       "...          ...        ...       ...       ...       ...       ...       ...   \n",
       "11245     0.0721     0.4008    0.0000    0.0000    0.0000    0.0000    0.0000   \n",
       "11246     0.0721     0.4008    0.0000    0.0000    0.0000    0.0000    0.0000   \n",
       "11247     0.0721     0.4007    0.0000    0.0000    0.0000    0.0000    0.0000   \n",
       "11248     0.0721     0.4008    0.0000    0.0000    0.0000    0.0000    0.0000   \n",
       "11249     0.1881     0.5192    0.0000    0.0112    0.0161    0.0000    0.0000   \n",
       "\n",
       "       BILL_AMT_mean  PAY_AMT_mean  BILL_PAY_diff2  BILL_PAY_diff3  \\\n",
       "0             0.2308        0.0395          0.6325          0.6592   \n",
       "1             0.1125        0.0043          0.5979          0.6109   \n",
       "2             0.2261        0.0071          0.6611          0.6652   \n",
       "3             0.1073        0.0010          0.6025          0.6074   \n",
       "4             0.2387        0.0084          0.6423          0.6672   \n",
       "...              ...           ...             ...             ...   \n",
       "11245         0.0901        0.0000          0.5908          0.6022   \n",
       "11246         0.0901        0.0000          0.5908          0.6022   \n",
       "11247         0.0901        0.0000          0.5908          0.6022   \n",
       "11248         0.0901        0.0000          0.5908          0.6022   \n",
       "11249         0.2297        0.0069          0.6407          0.6561   \n",
       "\n",
       "       BILL_PAY_diff4  BILL_PAY_diff5  BILL_AMT_diff1  BILL_AMT_diff2  \\\n",
       "0              0.5426          0.3715          0.4621          0.4740   \n",
       "1              0.5506          0.3070          0.4576          0.4603   \n",
       "2              0.5828          0.3459          0.4599          0.4963   \n",
       "3              0.5423          0.2968          0.4658          0.4753   \n",
       "4              0.6106          0.3810          0.4587          0.4597   \n",
       "...               ...             ...             ...             ...   \n",
       "11245          0.5399          0.2934          0.4586          0.4605   \n",
       "11246          0.5399          0.2934          0.4586          0.4605   \n",
       "11247          0.5399          0.2934          0.4586          0.4605   \n",
       "11248          0.5399          0.2934          0.4586          0.4605   \n",
       "11249          0.6078          0.3838          0.4381          0.4621   \n",
       "\n",
       "       BILL_AMT_diff3  BILL_AMT_diff4  BILL_AMT_diff5  PAY_AMT_diff2  ...  \\\n",
       "0              0.6010          0.4841          0.4371         0.5130  ...   \n",
       "1              0.5333          0.5284          0.4267         0.4858  ...   \n",
       "2              0.5790          0.5280          0.4270         0.4858  ...   \n",
       "3              0.5390          0.5293          0.4279         0.4873  ...   \n",
       "4              0.5348          0.5253          0.4304         0.4874  ...   \n",
       "...               ...             ...             ...            ...  ...   \n",
       "11245          0.5338          0.5296          0.4255         0.4864  ...   \n",
       "11246          0.5338          0.5296          0.4255         0.4864  ...   \n",
       "11247          0.5338          0.5296          0.4255         0.4864  ...   \n",
       "11248          0.5338          0.5296          0.4255         0.4864  ...   \n",
       "11249          0.5244          0.5204          0.4275         0.4733  ...   \n",
       "\n",
       "       SEX_embedding_2  EDUCATION_embedding_0  EDUCATION_embedding_1  \\\n",
       "0               0.0000                 0.0000                 1.0000   \n",
       "1               0.0000                 0.1970                 0.5704   \n",
       "2               0.0000                 1.0000                 0.4113   \n",
       "3               0.0000                 0.1970                 0.5704   \n",
       "4               0.0000                 1.0000                 0.4113   \n",
       "...                ...                    ...                    ...   \n",
       "11245           1.0000                 1.0000                 0.4113   \n",
       "11246           0.0000                 0.0000                 1.0000   \n",
       "11247           1.0000                 0.0000                 1.0000   \n",
       "11248           0.0000                 1.0000                 0.4113   \n",
       "11249           1.0000                 0.1970                 0.5704   \n",
       "\n",
       "       EDUCATION_embedding_2  MARRIAGE_embedding_0  MARRIAGE_embedding_1  \\\n",
       "0                     0.0000                0.5215                0.3509   \n",
       "1                     0.2745                0.5215                0.3509   \n",
       "2                     0.3483                0.5215                0.3509   \n",
       "3                     0.2745                0.0277                0.0000   \n",
       "4                     0.3483                0.0277                0.0000   \n",
       "...                      ...                   ...                   ...   \n",
       "11245                 0.3483                0.5215                0.3509   \n",
       "11246                 0.0000                0.0277                0.0000   \n",
       "11247                 0.0000                0.0277                0.0000   \n",
       "11248                 0.3483                0.0277                0.0000   \n",
       "11249                 0.2745                0.5215                0.3509   \n",
       "\n",
       "       MARRIAGE_embedding_2  AGE_embedding_0  AGE_embedding_1  \\\n",
       "0                    0.0000           0.4817           0.7091   \n",
       "1                    0.0000           0.4817           0.7091   \n",
       "2                    0.0000           0.4817           0.7091   \n",
       "3                    0.1324           0.4817           0.7091   \n",
       "4                    0.1324           0.4817           0.7091   \n",
       "...                     ...              ...              ...   \n",
       "11245                0.0000           0.9270           0.5117   \n",
       "11246                0.1324           0.7391           0.6137   \n",
       "11247                0.1324           0.7391           0.6137   \n",
       "11248                0.1324           0.5608           0.6882   \n",
       "11249                0.0000           0.1017           0.5664   \n",
       "\n",
       "       AGE_embedding_2  PAY_2_embedding_0  PAY_2_embedding_1  \\\n",
       "0               0.5514             0.0000             0.7488   \n",
       "1               0.5514             0.0000             0.7488   \n",
       "2               0.5514             0.0000             0.7488   \n",
       "3               0.5514             0.0000             0.7488   \n",
       "4               0.5514             0.0000             0.7488   \n",
       "...                ...                ...                ...   \n",
       "11245           0.8890             0.4530             0.4182   \n",
       "11246           0.7160             0.4530             0.4182   \n",
       "11247           0.7160             0.4530             0.4182   \n",
       "11248           0.6290             0.4530             0.4182   \n",
       "11249           0.3485             0.2125             1.0000   \n",
       "\n",
       "       PAY_2_embedding_2  PAY_3_embedding_0  PAY_3_embedding_1  \\\n",
       "0                 0.7400             0.8861             0.1238   \n",
       "1                 0.7400             0.8861             0.1238   \n",
       "2                 0.7400             0.8861             0.1238   \n",
       "3                 0.7400             0.8861             0.1238   \n",
       "4                 0.7400             0.8861             0.1238   \n",
       "...                  ...                ...                ...   \n",
       "11245             0.9688             0.6429             0.8311   \n",
       "11246             0.9688             0.6429             0.8311   \n",
       "11247             0.9688             0.6429             0.8311   \n",
       "11248             0.9688             0.6429             0.8311   \n",
       "11249             0.4304             0.6429             0.8311   \n",
       "\n",
       "       PAY_3_embedding_2  PAY_4_embedding_0  PAY_4_embedding_1  \\\n",
       "0                 0.0000             0.5189             0.8165   \n",
       "1                 0.0000             0.5189             0.8165   \n",
       "2                 0.0000             0.5189             0.8165   \n",
       "3                 0.0000             0.5189             0.8165   \n",
       "4                 0.0000             0.5189             0.8165   \n",
       "...                  ...                ...                ...   \n",
       "11245             0.1234             0.7212             0.4165   \n",
       "11246             0.1234             0.7212             0.4165   \n",
       "11247             0.1234             0.7212             0.4165   \n",
       "11248             0.1234             0.7212             0.4165   \n",
       "11249             0.1234             0.4969             0.9032   \n",
       "\n",
       "       PAY_4_embedding_2  PAY_5_embedding_0  PAY_5_embedding_1  \\\n",
       "0                 0.9520             0.0962             1.0000   \n",
       "1                 0.9520             0.0962             1.0000   \n",
       "2                 0.9520             0.0962             1.0000   \n",
       "3                 0.9520             0.0962             1.0000   \n",
       "4                 0.9520             0.0962             1.0000   \n",
       "...                  ...                ...                ...   \n",
       "11245             0.1478             1.0000             0.9322   \n",
       "11246             0.1478             1.0000             0.9322   \n",
       "11247             0.1478             1.0000             0.9322   \n",
       "11248             0.1478             1.0000             0.9322   \n",
       "11249             0.9818             1.0000             0.9322   \n",
       "\n",
       "       PAY_5_embedding_2  PAY_6_embedding_0  PAY_6_embedding_1  \\\n",
       "0                 0.2968             1.0000             0.7680   \n",
       "1                 0.2968             1.0000             0.7680   \n",
       "2                 0.2968             1.0000             0.7680   \n",
       "3                 0.2968             1.0000             0.7680   \n",
       "4                 0.2968             1.0000             0.7680   \n",
       "...                  ...                ...                ...   \n",
       "11245             0.1160             0.6487             0.5200   \n",
       "11246             0.1160             0.6487             0.5200   \n",
       "11247             0.1160             0.6487             0.5200   \n",
       "11248             0.1160             0.6487             0.5200   \n",
       "11249             0.1160             0.0000             0.4638   \n",
       "\n",
       "       PAY_6_embedding_2  \n",
       "0                 0.6170  \n",
       "1                 0.6170  \n",
       "2                 0.6170  \n",
       "3                 0.6170  \n",
       "4                 0.6170  \n",
       "...                  ...  \n",
       "11245             0.8763  \n",
       "11246             0.8763  \n",
       "11247             0.8763  \n",
       "11248             0.8763  \n",
       "11249             1.0000  \n",
       "\n",
       "[11250 rows x 62 columns]"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mm = MinMaxScaler()\n",
    "Xs = pd.DataFrame(mm.fit_transform(X), columns=X.columns, index=X.index)\n",
    "df_vs = pd.DataFrame(mm.transform(df_v), columns=df_v.columns, index=df_v.index)\n",
    "Xs"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "trying-specialist",
   "metadata": {},
   "source": [
    "### Autoencoder"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "enhanced-spokesman",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/50\n",
      "8/8 [==============================] - 1s 3ms/step - loss: 0.2552 - rms: 0.5051 - mae: 0.4082\n",
      "Epoch 2/50\n",
      "8/8 [==============================] - 0s 3ms/step - loss: 0.2396 - rms: 0.4895 - mae: 0.3947\n",
      "Epoch 3/50\n",
      "8/8 [==============================] - 0s 4ms/step - loss: 0.2243 - rms: 0.4736 - mae: 0.3830\n",
      "Epoch 4/50\n",
      "8/8 [==============================] - 0s 3ms/step - loss: 0.2033 - rms: 0.4508 - mae: 0.3612\n",
      "Epoch 5/50\n",
      "8/8 [==============================] - 0s 3ms/step - loss: 0.1740 - rms: 0.4170 - mae: 0.3290\n",
      "Epoch 6/50\n",
      "8/8 [==============================] - 0s 4ms/step - loss: 0.1417 - rms: 0.3764 - mae: 0.2900\n",
      "Epoch 7/50\n",
      "8/8 [==============================] - 0s 3ms/step - loss: 0.1113 - rms: 0.3336 - mae: 0.2489\n",
      "Epoch 8/50\n",
      "8/8 [==============================] - 0s 3ms/step - loss: 0.0860 - rms: 0.2932 - mae: 0.2125\n",
      "Epoch 9/50\n",
      "8/8 [==============================] - 0s 3ms/step - loss: 0.0676 - rms: 0.2599 - mae: 0.1816\n",
      "Epoch 10/50\n",
      "8/8 [==============================] - 0s 4ms/step - loss: 0.0551 - rms: 0.2348 - mae: 0.1602\n",
      "Epoch 11/50\n",
      "8/8 [==============================] - 0s 3ms/step - loss: 0.0471 - rms: 0.2171 - mae: 0.1464\n",
      "Epoch 12/50\n",
      "8/8 [==============================] - 0s 3ms/step - loss: 0.0422 - rms: 0.2055 - mae: 0.1361\n",
      "Epoch 13/50\n",
      "8/8 [==============================] - 0s 3ms/step - loss: 0.0395 - rms: 0.1987 - mae: 0.1288\n",
      "Epoch 14/50\n",
      "8/8 [==============================] - 0s 4ms/step - loss: 0.0376 - rms: 0.1940 - mae: 0.1233\n",
      "Epoch 15/50\n",
      "8/8 [==============================] - 0s 4ms/step - loss: 0.0366 - rms: 0.1912 - mae: 0.1202\n",
      "Epoch 16/50\n",
      "8/8 [==============================] - 0s 4ms/step - loss: 0.0358 - rms: 0.1892 - mae: 0.1183\n",
      "Epoch 17/50\n",
      "8/8 [==============================] - 0s 4ms/step - loss: 0.0354 - rms: 0.1882 - mae: 0.1177\n",
      "Epoch 18/50\n",
      "8/8 [==============================] - 0s 3ms/step - loss: 0.0350 - rms: 0.1870 - mae: 0.1171\n",
      "Epoch 19/50\n",
      "8/8 [==============================] - 0s 3ms/step - loss: 0.0349 - rms: 0.1867 - mae: 0.1174\n",
      "Epoch 20/50\n",
      "8/8 [==============================] - 0s 4ms/step - loss: 0.0345 - rms: 0.1857 - mae: 0.1172\n",
      "Epoch 21/50\n",
      "8/8 [==============================] - 0s 4ms/step - loss: 0.0344 - rms: 0.1853 - mae: 0.1174\n",
      "Epoch 22/50\n",
      "8/8 [==============================] - 0s 4ms/step - loss: 0.0342 - rms: 0.1848 - mae: 0.1176\n",
      "Epoch 23/50\n",
      "8/8 [==============================] - 0s 4ms/step - loss: 0.0341 - rms: 0.1846 - mae: 0.1179\n",
      "Epoch 24/50\n",
      "8/8 [==============================] - 0s 4ms/step - loss: 0.0337 - rms: 0.1837 - mae: 0.1175\n",
      "Epoch 25/50\n",
      "8/8 [==============================] - 0s 4ms/step - loss: 0.0334 - rms: 0.1827 - mae: 0.1175\n",
      "Epoch 26/50\n",
      "8/8 [==============================] - 0s 4ms/step - loss: 0.0333 - rms: 0.1824 - mae: 0.1181\n",
      "Epoch 27/50\n",
      "8/8 [==============================] - 0s 4ms/step - loss: 0.0330 - rms: 0.1816 - mae: 0.1182\n",
      "Epoch 28/50\n",
      "8/8 [==============================] - 0s 4ms/step - loss: 0.0326 - rms: 0.1805 - mae: 0.1178\n",
      "Epoch 29/50\n",
      "8/8 [==============================] - 0s 3ms/step - loss: 0.0324 - rms: 0.1800 - mae: 0.1180\n",
      "Epoch 30/50\n",
      "8/8 [==============================] - 0s 4ms/step - loss: 0.0319 - rms: 0.1787 - mae: 0.1175\n",
      "Epoch 31/50\n",
      "8/8 [==============================] - 0s 4ms/step - loss: 0.0314 - rms: 0.1771 - mae: 0.1168\n",
      "Epoch 32/50\n",
      "8/8 [==============================] - 0s 4ms/step - loss: 0.0309 - rms: 0.1758 - mae: 0.1163\n",
      "Epoch 33/50\n",
      "8/8 [==============================] - 0s 4ms/step - loss: 0.0307 - rms: 0.1753 - mae: 0.1164\n",
      "Epoch 34/50\n",
      "8/8 [==============================] - 0s 4ms/step - loss: 0.0301 - rms: 0.1735 - mae: 0.1153\n",
      "Epoch 35/50\n",
      "8/8 [==============================] - 0s 3ms/step - loss: 0.0297 - rms: 0.1724 - mae: 0.1146\n",
      "Epoch 36/50\n",
      "8/8 [==============================] - 0s 3ms/step - loss: 0.0293 - rms: 0.1711 - mae: 0.1140\n",
      "Epoch 37/50\n",
      "8/8 [==============================] - 0s 4ms/step - loss: 0.0288 - rms: 0.1697 - mae: 0.1130\n",
      "Epoch 38/50\n",
      "8/8 [==============================] - 0s 3ms/step - loss: 0.0284 - rms: 0.1684 - mae: 0.1119\n",
      "Epoch 39/50\n",
      "8/8 [==============================] - 0s 3ms/step - loss: 0.0278 - rms: 0.1667 - mae: 0.1105\n",
      "Epoch 40/50\n",
      "8/8 [==============================] - 0s 3ms/step - loss: 0.0274 - rms: 0.1654 - mae: 0.1096\n",
      "Epoch 41/50\n",
      "8/8 [==============================] - 0s 3ms/step - loss: 0.0269 - rms: 0.1640 - mae: 0.1084\n",
      "Epoch 42/50\n",
      "8/8 [==============================] - 0s 3ms/step - loss: 0.0265 - rms: 0.1629 - mae: 0.1073\n",
      "Epoch 43/50\n",
      "8/8 [==============================] - 0s 3ms/step - loss: 0.0259 - rms: 0.1610 - mae: 0.1057\n",
      "Epoch 44/50\n",
      "8/8 [==============================] - 0s 3ms/step - loss: 0.0257 - rms: 0.1603 - mae: 0.1050\n",
      "Epoch 45/50\n",
      "8/8 [==============================] - 0s 3ms/step - loss: 0.0251 - rms: 0.1585 - mae: 0.1035\n",
      "Epoch 46/50\n",
      "8/8 [==============================] - 0s 3ms/step - loss: 0.0248 - rms: 0.1576 - mae: 0.1025\n",
      "Epoch 47/50\n",
      "8/8 [==============================] - 0s 3ms/step - loss: 0.0245 - rms: 0.1566 - mae: 0.1015\n",
      "Epoch 48/50\n",
      "8/8 [==============================] - 0s 3ms/step - loss: 0.0241 - rms: 0.1552 - mae: 0.1002\n",
      "Epoch 49/50\n",
      "8/8 [==============================] - 0s 3ms/step - loss: 0.0236 - rms: 0.1537 - mae: 0.0987\n",
      "Epoch 50/50\n",
      "8/8 [==============================] - 0s 3ms/step - loss: 0.0231 - rms: 0.1521 - mae: 0.0972\n"
     ]
    }
   ],
   "source": [
    "autoencoder, encoder = make_autoencoder(X_train=Xs, encoding_dim=np.round(np.sqrt(Xs.shape[1]), 0), batch_size=1500, epochs=50)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "empty-comparative",
   "metadata": {},
   "outputs": [],
   "source": [
    "Xe = pd.DataFrame(data=encoder.predict(Xs), index=Xs.index)\n",
    "df_ve = pd.DataFrame(data=encoder.predict(df_vs), index=df_vs.index)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "attached-assault",
   "metadata": {},
   "source": [
    "### Pipeline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "billion-cursor",
   "metadata": {},
   "outputs": [],
   "source": [
    "pipe = Pipeline([(\"vt\", VarianceThreshold(threshold=0.0001)), (\"mm\", StandardScaler())])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "noted-asset",
   "metadata": {},
   "source": [
    "### Modelos"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "original-prevention",
   "metadata": {},
   "outputs": [],
   "source": [
    "names = [\"Linear Regression\",\"KNN\",\"Decision Tree\",\"Random Forest\",\"Lasso Regression\",\n",
    "        \"Ridge Regression\",\"Elastic Net\",\"AdaBoost\",\"Neural Network\"]\n",
    "classifiers = [\n",
    "    LinearRegression(),\n",
    "    KNeighborsRegressor(),\n",
    "    DecisionTreeRegressor(),\n",
    "    RandomForestRegressor(),\n",
    "    Lasso(),\n",
    "    Ridge(),\n",
    "    ElasticNet(),\n",
    "    AdaBoostRegressor(),\n",
    "    MLPRegressor()\n",
    "]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "handed-links",
   "metadata": {},
   "outputs": [],
   "source": [
    "classifiers_dict = {name:{\"modelo\":classifier} for name, classifier in zip(names,classifiers)}"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "swiss-singer",
   "metadata": {},
   "source": [
    "### Cross Valdation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "extraordinary-tribe",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Linear Regression\n",
      "R2 media: -141,262,285,657,358,072,488,656,896.00, desviación estándar: 244,673,455,951,852,463,653,388,288.00\n",
      "\n",
      "\n",
      "KNN\n",
      "R2 media: 0.38, desviación estándar: 0.16\n",
      "\n",
      "\n",
      "Decision Tree\n",
      "R2 media: 0.37, desviación estándar: 0.17\n",
      "\n",
      "\n",
      "Random Forest\n",
      "R2 media: 0.63, desviación estándar: 0.16\n",
      "\n",
      "\n",
      "Lasso Regression\n",
      "R2 media: 0.34, desviación estándar: 0.15\n",
      "\n",
      "\n",
      "Ridge Regression\n",
      "R2 media: 0.34, desviación estándar: 0.15\n",
      "\n",
      "\n",
      "Elastic Net\n",
      "R2 media: 0.36, desviación estándar: 0.09\n",
      "\n",
      "\n",
      "AdaBoost\n",
      "R2 media: -0.89, desviación estándar: 1.02\n",
      "\n",
      "\n",
      "Neural Network\n",
      "R2 media: 0.36, desviación estándar: 0.15\n",
      "\n",
      "\n"
     ]
    }
   ],
   "source": [
    "for modelo in classifiers_dict:\n",
    "    print(modelo)\n",
    "    classifiers_dict[modelo][\"R2\"] = regression_metrics(Xs, y, pipe, classifiers_dict[modelo][\"modelo\"])\n",
    "    print(\"\\n\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "initial-telescope",
   "metadata": {},
   "source": [
    "### Hyperparametrización"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dimensional-battlefield",
   "metadata": {},
   "source": [
    "#### Random Forest"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "changing-return",
   "metadata": {},
   "outputs": [],
   "source": [
    "model = RandomForestRegressor()\n",
    "param_grid = {\"model__n_estimators\" : [100,150],\n",
    "              \"model__criterion\":[\"mse\", \"mae\"],\n",
    "              \"model__bootstrap\":[True,False],\n",
    "              \"model__oob_score\":[True,False]}\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "growing-poland",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Fitting 4 folds for each of 5 candidates, totalling 20 fits\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/paramont/work/envs/diplomado/lib/python3.8/site-packages/sklearn/pipeline.py:346: DataConversionWarning:\n",
      "\n",
      "A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n",
      "\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "R2: 0.63\n"
     ]
    }
   ],
   "source": [
    "bm = hyperparam_logistic(Xs, y, pipe, model, param_grid)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "distant-companion",
   "metadata": {},
   "source": [
    "#### KNN"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "hourly-night",
   "metadata": {},
   "outputs": [],
   "source": [
    "model = KNeighborsRegressor()\n",
    "param_grid = {\"model__n_neighbors\" : range(5,91)}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "extra-calcium",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Fitting 4 folds for each of 5 candidates, totalling 20 fits\n",
      "R2: 0.37\n"
     ]
    }
   ],
   "source": [
    "knn = hyperparam_logistic(Xs, y, pipe, model, param_grid)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "failing-catalyst",
   "metadata": {},
   "source": [
    "#### Elastic Net"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "smaller-michael",
   "metadata": {},
   "outputs": [],
   "source": [
    "model = ElasticNet(max_iter=10000)\n",
    "param_grid = {\n",
    "              \"model__alpha\":np.arange(0.1,10,.5)\n",
    "             }"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "crazy-thesis",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Fitting 4 folds for each of 5 candidates, totalling 20 fits\n",
      "R2: 0.36\n"
     ]
    }
   ],
   "source": [
    "en = hyperparam_logistic(Xs, y, pipe, model, param_grid)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "qualified-legislation",
   "metadata": {},
   "source": [
    "### Resultados"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "18493abc",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-05-28T01:39:04.378987Z",
     "start_time": "2021-05-28T01:39:04.172673Z"
    },
    "execution": {
     "iopub.execute_input": "2021-10-16T14:36:32.856562Z",
     "iopub.status.busy": "2021-10-16T14:36:32.855365Z",
     "iopub.status.idle": "2021-10-16T14:36:32.989550Z",
     "shell.execute_reply": "2021-10-16T14:36:32.988794Z",
     "shell.execute_reply.started": "2021-10-16T14:36:32.856401Z"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "y[\"pred\"] = bm.predict(Xs)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "finnish-cassette",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(y.index, y[\"PAY_AMT1\"], label = \"reales\")\n",
    "plt.plot(y.index, y[\"pred\"], label = \"predicciones\")\n",
    "plt.title('Two or more lines on same plot with suitable legends ')\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "whole-irish",
   "metadata": {},
   "source": [
    "### Transformando el dataset de validación"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "czech-prediction",
   "metadata": {},
   "outputs": [],
   "source": [
    "resultados = pd.DataFrame()\n",
    "resultados[\"CUSTOMER_ID\"] = df_v[\"CUSTOMER_ID\"]\n",
    "resultados[\"y_hat\"] = bm.predict(df_vs.fillna(0))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "documented-cowboy",
   "metadata": {},
   "outputs": [],
   "source": [
    "resultados.to_csv(\"HernandezGonzalezRicardoParamont_PAYAMT12.csv\",index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "therapeutic-creativity",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.10"
  },
  "varInspector": {
   "cols": {
    "lenName": 16,
    "lenType": 16,
    "lenVar": 40
   },
   "kernels_config": {
    "python": {
     "delete_cmd_postfix": "",
     "delete_cmd_prefix": "del ",
     "library": "var_list.py",
     "varRefreshCmd": "print(var_dic_list())"
    },
    "r": {
     "delete_cmd_postfix": ") ",
     "delete_cmd_prefix": "rm(",
     "library": "var_list.r",
     "varRefreshCmd": "cat(var_dic_list()) "
    }
   },
   "types_to_exclude": [
    "module",
    "function",
    "builtin_function_or_method",
    "instance",
    "_Feature"
   ],
   "window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
